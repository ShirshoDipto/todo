(()=>{"use strict";class t{constructor(t,e,i){this.title=t,this.todos=e,this.listNumber=i}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,s,o,l,r){this.title=t,this.description=e,this.dueDate=i,this.priority=s,this.listNumber=o,this.completed=l,this.todoNumber=r}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function s(t,e,s){i.push(t);const o=document.createElement("div");o.classList.add("a-list"),o.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(o,s);const l=document.createElement("div");l.classList.add("left"),o.appendChild(l);const r=document.createElement("div");r.classList.add("right"),o.appendChild(r);const n=document.createElement("img");n.classList.add("icon"),n.setAttribute("src","icons/plus.png"),l.appendChild(n);const c=document.createElement("div");c.classList.add("list-title"),c.textContent=t.getTitle,l.appendChild(c);const d=document.createElement("img");d.classList.add("icon"),d.setAttribute("src","icons/plus.png"),r.appendChild(d);const u=document.createElement("img");u.classList.add("icon"),u.setAttribute("src","icons/plus.png"),r.appendChild(u);const a=document.createElement("img");a.classList.add("icon"),a.setAttribute("src","icons/plus.png"),r.appendChild(a);const m=document.createElement("img");return m.classList.add("delete"),m.setAttribute("src","icons/plus.png"),r.appendChild(m),o}function o(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function l(t){let e=0;for(let s=0;s<i.length;s++)if(i[s].setListNumber=s,0!==i[s].getTodos.length){let o=0;const l=i[s].getListNumber;for(let r of i[s].getTodos){r.setListNumber=s,r.setTodoNumber=o;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${l}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${o}`),o++,e++}}}let r=[];function n(t,e){r.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),t.appendChild(i);const s=document.createElement("div");s.classList.add("a-list"),i.appendChild(s);const o=document.createElement("div");o.classList.add("description"),o.textContent=e.getDescription,i.appendChild(o);const l=document.createElement("div");l.classList.add("collapse"),i.appendChild(l);const n=document.createElement("div");n.classList.add("left"),s.appendChild(n);const c=document.createElement("div");c.classList.add("right"),s.appendChild(c);const d=document.createElement("img");d.setAttribute("src","icons/plus.png"),d.setAttribute("alt","collapse icon"),l.appendChild(d);const u=document.createElement("input");u.setAttribute("type","checkbox"),u.setAttribute("id","todo-checkbox"),u.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(u.checked=!0),n.appendChild(u);const a=document.createElement("div");a.textContent=`${e.getTitle} (Due: ${e.getDueDate})`,n.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/plus.png"),m.classList.add("icon"),c.appendChild(m);const g=document.createElement("img");g.setAttribute("src","icons/plus.png"),g.classList.add("icon"),c.appendChild(g);const b=document.createElement("img");b.setAttribute("src","icons/plus.png"),b.classList.add("icon"),c.appendChild(b);const p=document.createElement("img");return p.setAttribute("src","icons/plus.png"),p.classList.add("delete"),c.appendChild(p),i}function c(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function d(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function u(t,e){let i=0;for(let s of t){let t=s.getTitle,o=s.getDescription,l=s.dueDate,r=s.getPriority,n=s.getListNumber,c=s.getIsCompleted,d=s.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${o},${l},${r},${n},${c},${d}`),i++}}function a(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,s=e.getListNumber;localStorage.setItem(`list_${i}`,`${t},${s}`),u(e.getTodos,i),i++}}let m="0";function g(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");h.removeChild(t);const s=Array.from(document.querySelectorAll(".a-list"));let o=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let s of e)s.getAttribute("list-number")===i&&t.removeChild(s)}(q,o,e),o=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,s){i.splice(parseInt(e),1);let o=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${o}`),o++;l(s)}(s,e,o),e===m&&function(t,e){0===i.length?c($,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),c($,e,i[0].getTitle),d(t,"0"),m="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),c($,e,i[parseInt(e)-1].getTitle),d(t,""+(parseInt(e)-1)),m=""+(parseInt(e)-1))}(o,e),m=e}a(i,m)}(this);else{o(h),this.setAttribute("id","active-list");let e=t.target.getAttribute("list-number");c($,e,this.firstElementChild.lastElementChild.textContent),d(Array.from(document.querySelectorAll(".a-todo")),e),m=e,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",m)}console.log(i)}function b(t){!0===t.checked?t.checked=!1:t.checked=!0}function p(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),console.table(i),q.removeChild(this),l(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else{"checkbox"===t.target.getAttribute("type")&&b(t.target);const e=this.getAttribute("list-number"),s=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(s)].changeCompleteStatus(),b(this.firstElementChild.firstElementChild.firstElementChild),console.log(this.firstElementChild.firstElementChild.firstElementChild)}a(i,m)}const h=document.querySelector(".all-list"),f=document.querySelector("#list-name"),A=document.querySelector(".list-form"),v=document.querySelector(".add-new-list"),L=document.querySelector(".new-list-modal"),y=document.querySelector(".add-todo"),C=document.querySelector(".new-todo-modal"),S=document.querySelector(".todo-form"),N=document.querySelector("#todo-name"),E=document.querySelector("#due-date"),T=document.querySelector("#priority"),I=document.querySelector("#description"),q=document.querySelector(".all-todo"),$=document.querySelector(".todo-header");if(localStorage.getItem("activeListNumber")){let o=function(){let i=[],s=[];for(let o in localStorage)if(o.includes("list")&&!o.includes("todo")){const e=localStorage.getItem(o).split(","),s=e[0],l=parseInt(e[1]),r=new t(s,[],l);i.push(r)}else if(o.includes("todo")){const t=localStorage.getItem(o).split(","),i=t[0],l=t[1],r=t[2],n=t[3],c=parseInt(t[4]),d=parseInt(t[5]),u=parseInt(t[6]),a=new e(i,l,r,n,c,d,u);s.push(a)}let o=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(o,s),o}();m=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){s(e,h,L);for(let t of e.getTodos)n(q,t)}const e=document.querySelector(`.all-list div[list-number="${m}"]`);null!==e&&e.setAttribute("id","active-list");const o=Array.from(document.querySelectorAll(".a-todo"));c($,m,i[parseInt(m)].getTitle),d(o,m)}(o)}else{let e=new t("My Day",[],0);s(e,h,L),c($,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),a(i,m)}const D=document.querySelectorAll(".all-list .a-list"),k=document.querySelectorAll(".all-todo .a-todo");y.onclick=()=>{C.removeAttribute("id")},v.addEventListener("click",(()=>{L.removeAttribute("id")})),A.onsubmit=function(e){e.preventDefault();let l=new t(f.value,[],i.length);o(h);const r=s(l,h,L);r.setAttribute("id","active-list");const n=Array.from(document.querySelectorAll(".a-todo"));c($,l.getListNumber,l.getTitle),d(n,l.getListNumber.toString()),m=l.getListNumber.toString(),r.onclick=g,e.target.reset(),L.setAttribute("id","hide"),console.log(i),a(i,m)},A.onreset=()=>{L.setAttribute("id","hide")},S.onsubmit=function(t){t.preventDefault();const s=parseInt($.getAttribute("list-number")),o=i[parseInt(s)].getTodos.length;let l=new e(N.value,I.value,E.value,T.value,s,0,o);i[parseInt(s)].getTodos.push(l),n(q,l).onclick=p,C.setAttribute("id","hide"),t.target.reset(),console.table(i),a(i,m)},S.onreset=()=>{C.setAttribute("id","hide")},D.forEach((t=>{t.onclick=g})),k.forEach((t=>{t.onclick=p}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQVNwSCxNQUFPUyxFQUFZVCxNQUFPVSxFQUFRVixNQUFPVyxFQUFTWCxNQUFPSixFQUFZLEVBQUdpQixHQUN4R1csRUFBTXdFLFNBQVNwRyxJQUFhTSxTQUFTSyxLQUFLc0gsR0FJdkIvRCxFQUFvQmdDLEVBQVMrQixHQUNyQ2EsUUFBVTlCLEVBR3JCTSxFQUFhaEYsYUFBYSxLQUFNLFFBQ2hDa0QsRUFBRUMsT0FBTzJELFFBQ1R2QyxRQUFRSSxNQUFNckYsR0FDZHVELEVBQVN2RCxFQUFPd0QsRUFDcEIsRUEyTEFtQyxFQUFTOEIsUUFBVSxLQUNmL0IsRUFBYWhGLGFBQWEsS0FBTSxPQUFPLEVBRzNDc0csRUFBZVUsU0FBUWpELElBQ25CQSxFQUFLeUMsUUFBVXZELENBQWMsSUFHakNzRCxFQUFZUyxTQUFRMUUsSUFDaEJBLEVBQUtrRSxRQUFVOUIsQ0FBVSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9saXN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvdG9kby5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21hbmFnZUxpc3RJbnRlcmZhY2UuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tYW5hZ2VUb2RvSW50ZXJmYWNlLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3RvcmFnZU1hbmFnZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlzdCB7XG4gICAgY29uc3RydWN0b3IodGl0bGUsIHRvZG9zLCBsaXN0TnVtYmVyKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy50b2RvcyA9IHRvZG9zO1xuICAgICAgICB0aGlzLmxpc3ROdW1iZXIgPSBsaXN0TnVtYmVyO1xuICAgIH1cblxuICAgIGdldCBnZXRMaXN0TnVtYmVyKCkge3JldHVybiB0aGlzLmxpc3ROdW1iZXJ9XG5cbiAgICBzZXQgc2V0TGlzdE51bWJlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLmxpc3ROdW1iZXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXQgZ2V0VGl0bGUoKSB7cmV0dXJuIHRoaXMudGl0bGV9XG5cbiAgICBnZXQgZ2V0VG9kb3MoKSB7cmV0dXJuIHRoaXMudG9kb3N9XG5cbiAgICBzZXQgc2V0VG9kb3ModmFsdWUpIHtcbiAgICAgICAgdGhpcy50b2RvcyA9IHZhbHVlO1xuICAgIH1cblxuICAgIHNldCBzZXRUaXRsZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnRpdGxlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IHNldFRvZG9zKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudG9kb3MgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBhZGROZXdMaXN0KHRoZVRvZG8pIHtcbiAgICAgICAgdGhpcy50b2Rvcy5wdXNoKHRoZVRvZG8pO1xuICAgIH1cbn0iLCJcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb2RvIHtcblxuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIGxpc3ROdW1iZXIsIGNvbXBsZXRlZCwgdG9kb051bWJlcikge1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgICAgICB0aGlzLmxpc3ROdW1iZXIgPSBsaXN0TnVtYmVyO1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGNvbXBsZXRlZDtcbiAgICAgICAgdGhpcy50b2RvTnVtYmVyID0gdG9kb051bWJlcjtcbiAgICB9XG5cbiAgICBnZXQgZ2V0VG9kb051bWJlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9kb051bWJlcjtcbiAgICB9XG5cbiAgICBzZXQgc2V0VG9kb051bWJlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLnRvZG9OdW1iZXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXQgZ2V0SXNDb21wbGV0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlZDtcbiAgICB9XG5cbiAgICBjaGFuZ2VDb21wbGV0ZVN0YXR1cygpIHtcbiAgICAgICAgaWYgKHRoaXMuY29tcGxldGVkID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IDE7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgZ2V0TGlzdE51bWJlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdE51bWJlcjtcbiAgICB9XG5cbiAgICBzZXQgc2V0TGlzdE51bWJlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLmxpc3ROdW1iZXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXQgZ2V0VGl0bGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRpdGxlO1xuICAgIH1cbiAgICBnZXQgZ2V0RGVzY3JpcHRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlc2NyaXB0aW9uO1xuICAgIH1cbiAgICBnZXQgZ2V0RHVlRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZHVlRGF0ZTtcbiAgICB9XG4gICAgZ2V0IGdldFByaW9yaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcmlvcml0eTtcbiAgICB9XG5cbiAgICBzZXQgc2V0VGl0bGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIHNldCBzZXREZXNjcmlwdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gdmFsdWU7XG4gICAgfVxuICAgIHNldCBzZXREdWVEYXRlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IHZhbHVlO1xuICAgIH1cbiAgICBzZXQgc2V0UHJpb3JpdHkodmFsdWUpIHtcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHZhbHVlO1xuICAgIH1cbn0iLCJcblxuZXhwb3J0IGxldCBsaXN0cyA9IFtdO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkTmV3TGlzdEludGVyZmFjZShsaXN0T2JqZWN0LCBjb250YWluZXIsIGluc2VydF9iZWZvcmUpIHtcblxuICAgIGxpc3RzLnB1c2gobGlzdE9iamVjdCk7XG5cbiAgICBjb25zdCBhTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGFMaXN0LmNsYXNzTGlzdC5hZGQoJ2EtbGlzdCcpO1xuICAgIGFMaXN0LnNldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInLCBgJHtsaXN0T2JqZWN0LmdldExpc3ROdW1iZXJ9YCk7XG4gICAgLy8gYUxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdhY3RpdmUtbGlzdCcpO1xuICAgIGNvbnRhaW5lci5pbnNlcnRCZWZvcmUoYUxpc3QsIGluc2VydF9iZWZvcmUpO1xuXG5cbiAgICBjb25zdCBsZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGVmdC5jbGFzc0xpc3QuYWRkKCdsZWZ0Jyk7XG4gICAgYUxpc3QuYXBwZW5kQ2hpbGQobGVmdCk7XG5cbiAgICBjb25zdCByaWdodCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHJpZ2h0LmNsYXNzTGlzdC5hZGQoJ3JpZ2h0Jyk7XG4gICAgYUxpc3QuYXBwZW5kQ2hpbGQocmlnaHQpO1xuXG4gICAgY29uc3QgaWNvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBpY29uMS5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XG4gICAgaWNvbjEuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvcGx1cy5wbmcnKTtcbiAgICBsZWZ0LmFwcGVuZENoaWxkKGljb24xKTtcblxuICAgIGNvbnN0IGxpc3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxpc3RUaXRsZS5jbGFzc0xpc3QuYWRkKCdsaXN0LXRpdGxlJyk7XG4gICAgbGlzdFRpdGxlLnRleHRDb250ZW50ID0gbGlzdE9iamVjdC5nZXRUaXRsZTtcbiAgICBsZWZ0LmFwcGVuZENoaWxkKGxpc3RUaXRsZSk7XG5cbiAgICBjb25zdCBpY29uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb24yLmNsYXNzTGlzdC5hZGQoJ2ljb24nKTtcbiAgICBpY29uMi5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpY29ucy9wbHVzLnBuZycpO1xuICAgIHJpZ2h0LmFwcGVuZENoaWxkKGljb24yKTtcblxuICAgIGNvbnN0IGljb24zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaWNvbjMuY2xhc3NMaXN0LmFkZCgnaWNvbicpO1xuICAgIGljb24zLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BsdXMucG5nJyk7XG4gICAgcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjMpO1xuXG4gICAgY29uc3QgaWNvbjQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBpY29uNC5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XG4gICAgaWNvbjQuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvcGx1cy5wbmcnKTtcbiAgICByaWdodC5hcHBlbmRDaGlsZChpY29uNCk7XG5cbiAgICBjb25zdCBpY29uNSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb241LmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZScpO1xuICAgIGljb241LnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BsdXMucG5nJyk7XG4gICAgcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjUpO1xuXG4gICAgcmV0dXJuIGFMaXN0O1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVFeGlzdGluZ01hcmtlcihjb250YWluZXIpIHtcbiAgICBpZiAobGlzdHMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgY29uc3QgZmlyc3RMaXN0ID0gY29udGFpbmVyLmZpcnN0RWxlbWVudENoaWxkO1xuICAgIGlmIChmaXJzdExpc3QuZ2V0QXR0cmlidXRlKCdpZCcpID09PSAnYWN0aXZlLWxpc3QnKSB7XG4gICAgICAgIGZpcnN0TGlzdC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBsZXQgbmV4dExpc3QgPSBmaXJzdExpc3QubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgaWYgKG5leHRMaXN0LmdldEF0dHJpYnV0ZSgnaWQnKSA9PT0gJ2FjdGl2ZS1saXN0Jyl7XG4gICAgICAgICAgICAgICAgbmV4dExpc3QucmVtb3ZlQXR0cmlidXRlKCdpZCcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV4dExpc3QgPSBuZXh0TGlzdC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUFycmF5QW5kVG9kbyhhbGxUb2Rvcykge1xuICAgIGxldCBhbGxUb2RvSW5kZXggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGlzdHNbaV0uc2V0TGlzdE51bWJlciA9IGk7XG4gICAgICAgIGlmIChsaXN0c1tpXS5nZXRUb2Rvcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGV0IHRvZG9fbm8gPSAwO1xuICAgICAgICAgICAgY29uc3QgbGlzdF9ubyA9IGxpc3RzW2ldLmdldExpc3ROdW1iZXI7XG4gICAgICAgICAgICBmb3IgKGxldCB4IG9mIGxpc3RzW2ldLmdldFRvZG9zKSB7XG4gICAgICAgICAgICAgICAgeC5zZXRMaXN0TnVtYmVyID0gaTtcbiAgICAgICAgICAgICAgICB4LnNldFRvZG9OdW1iZXIgPSB0b2RvX25vO1xuICAgICAgICAgICAgICAgIGxldCB0aGVET00gPSBhbGxUb2Rvc1thbGxUb2RvSW5kZXhdO1xuICAgICAgICAgICAgICAgIHRoZURPTS5yZW1vdmVBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJyk7XG4gICAgICAgICAgICAgICAgdGhlRE9NLnNldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInLCBgJHtsaXN0X25vfWApO1xuICAgICAgICAgICAgICAgIHRoZURPTS5yZW1vdmVBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJyk7XG4gICAgICAgICAgICAgICAgdGhlRE9NLnNldEF0dHJpYnV0ZSgndG9kby1udW1iZXInLCBgJHt0b2RvX25vfWApO1xuICAgICAgICAgICAgICAgIHRvZG9fbm8rKztcbiAgICAgICAgICAgICAgICBhbGxUb2RvSW5kZXgrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUxpc3RzQW5kVG9kb3MoY29udGFpbmVyLCBsaXN0TnVtYmVyLCBhbGxUb2Rvcykge1xuXG4gICAgbGlzdHMuc3BsaWNlKHBhcnNlSW50KGxpc3ROdW1iZXIpLCAxKTtcbiAgICAvLyAgdXBkYXRlIGRvbXNcbiAgICBsZXQgaW5kZXggPSAwO1xuXG4gICAgZm9yIChsZXQgbGlzdCBvZiBjb250YWluZXIpIHtcbiAgICAgICAgbGlzdC5yZW1vdmVBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJyk7XG4gICAgICAgIGxpc3Quc2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicsIGAke2luZGV4fWApO1xuICAgICAgICBpbmRleCsrO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSBBcnJheSBhbmQgdG9kbyBET00nc1xuICAgIHVwZGF0ZUFycmF5QW5kVG9kbyhhbGxUb2Rvcyk7XG59XG5cblxuLy8gPGRpdiBjbGFzcz1cImEtbGlzdFwiPlxuLy8gICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4vLyAgICAgICAgIDxpbWcgY2xhc3M9XCJpY29uXCIgc3JjPVwiaWNvbnMvcGx1cy5wbmdcIiBhbHQ9XCJwaWNcIj5cbi8vICAgICAgICAgPGRpdiBjbGFzcz1cImxpc3QtdGl0bGVcIj5NeSBEYXk8L2Rpdj5cbi8vICAgICA8L2Rpdj5cbi8vICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbi8vICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIkVcIj5cbi8vICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIlVcIj5cbi8vICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIkRcIj5cbi8vICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIkRlbFwiPlxuLy8gICAgIDwvZGl2PlxuLy8gPC9kaXY+XG4iLCJcblxuZXhwb3J0IGxldCB0b2RvcyA9IFtdO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBhZGROZXdUb2RvSW50ZXJmYWNlKGNvbnRhaW5lciwgdGhlVG9kbykge1xuXG4gICAgLy8gZGVzY3JpcHRpb25zIGdvZXMgaGVyZVxuXG4gICAgdG9kb3MucHVzaCh0aGVUb2RvKTtcblxuICAgIGNvbnN0IGFUb2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYVRvZG8uY2xhc3NMaXN0LmFkZCgnYS10b2RvJyk7XG4gICAgYVRvZG8uc2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicsIGAke3RoZVRvZG8uZ2V0TGlzdE51bWJlcn1gKTtcbiAgICBhVG9kby5zZXRBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJywgYCR7dGhlVG9kby5nZXRUb2RvTnVtYmVyfWApO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChhVG9kbyk7XG5cbiAgICBjb25zdCBhTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGFMaXN0LmNsYXNzTGlzdC5hZGQoJ2EtbGlzdCcpO1xuICAgIGFUb2RvLmFwcGVuZENoaWxkKGFMaXN0KTtcblxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZCgnZGVzY3JpcHRpb24nKTtcbiAgICBkZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHRoZVRvZG8uZ2V0RGVzY3JpcHRpb247XG4gICAgYVRvZG8uYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb24pO1xuXG4gICAgY29uc3QgY29sbGFwc2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb2xsYXBzZS5jbGFzc0xpc3QuYWRkKCdjb2xsYXBzZScpO1xuICAgIGFUb2RvLmFwcGVuZENoaWxkKGNvbGxhcHNlKTtcblxuICAgIGNvbnN0IGxlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZWZ0LmNsYXNzTGlzdC5hZGQoJ2xlZnQnKTtcbiAgICBhTGlzdC5hcHBlbmRDaGlsZChsZWZ0KTtcblxuICAgIGNvbnN0IHJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcmlnaHQuY2xhc3NMaXN0LmFkZCgncmlnaHQnKTtcbiAgICBhTGlzdC5hcHBlbmRDaGlsZChyaWdodCk7XG5cbiAgICBjb25zdCBjb2xsYXBzZUltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGNvbGxhcHNlSW1nLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BsdXMucG5nJyk7XG4gICAgY29sbGFwc2VJbWcuc2V0QXR0cmlidXRlKCdhbHQnLCAnY29sbGFwc2UgaWNvbicpO1xuICAgIGNvbGxhcHNlLmFwcGVuZENoaWxkKGNvbGxhcHNlSW1nKTtcblxuICAgIGNvbnN0IGlucHV0MSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgaW5wdXQxLnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuICAgIGlucHV0MS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RvZG8tY2hlY2tib3gnKTtcbiAgICBpbnB1dDEuc2V0QXR0cmlidXRlKCduYW1lJywgJ3RvZG8tY2hlY2tib3gnKTtcbiAgICBpZiAodGhlVG9kby5nZXRJc0NvbXBsZXRlZCA9PT0gMSkge1xuICAgICAgICBpbnB1dDEuY2hlY2tlZCA9IHRydWU7XG4gICAgfVxuICAgIGxlZnQuYXBwZW5kQ2hpbGQoaW5wdXQxKTtcblxuICAgIGNvbnN0IHRpdGxlVG9kbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRpdGxlVG9kby50ZXh0Q29udGVudCA9IGAke3RoZVRvZG8uZ2V0VGl0bGV9IChEdWU6ICR7dGhlVG9kby5nZXREdWVEYXRlfSlgO1xuICAgIGxlZnQuYXBwZW5kQ2hpbGQodGl0bGVUb2RvKTtcblxuICAgIGNvbnN0IGljb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaWNvbjIuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvcGx1cy5wbmcnKTtcbiAgICBpY29uMi5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XG4gICAgcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjIpO1xuXG4gICAgY29uc3QgaWNvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBpY29uMy5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpY29ucy9wbHVzLnBuZycpO1xuICAgIGljb24zLmNsYXNzTGlzdC5hZGQoJ2ljb24nKTtcbiAgICByaWdodC5hcHBlbmRDaGlsZChpY29uMyk7XG5cbiAgICBjb25zdCBpY29uNCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb240LnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BsdXMucG5nJyk7XG4gICAgaWNvbjQuY2xhc3NMaXN0LmFkZCgnaWNvbicpO1xuICAgIHJpZ2h0LmFwcGVuZENoaWxkKGljb240KTtcblxuICAgIGNvbnN0IGljb241ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaWNvbjUuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvcGx1cy5wbmcnKTtcbiAgICBpY29uNS5jbGFzc0xpc3QuYWRkKCdkZWxldGUnKTtcbiAgICByaWdodC5hcHBlbmRDaGlsZChpY29uNSk7XG5cbiAgICByZXR1cm4gYVRvZG87XG59XG5cblxuLy8gY2hhbmdlIHRvZG8gaGVhZGVyXG5leHBvcnQgZnVuY3Rpb24gY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCBsaXN0TnVtYmVyLCB0aXRsZSkge1xuICAgIGlmIChsaXN0TnVtYmVyID09PSBudWxsKSB7XG4gICAgICAgIHRvZG9IZWFkZXIuZmlyc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSB0aXRsZTtcbiAgICB9XG4gICAgdG9kb0hlYWRlci5zZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJywgYCR7bGlzdE51bWJlcn1gKTtcbiAgICB0b2RvSGVhZGVyLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50ID0gdGl0bGU7XG59XG5cbi8vIHNob3cgYWxsIHRvZG9zIG9mIGEgcGFydGljdWxhciBsaXN0XG5leHBvcnQgZnVuY3Rpb24gc2hvd0xpc3RzVG9kb3MoYWxsVG9kb3MsIGxpc3ROdW1iZXIpIHtcbiAgICBpZiAoYWxsVG9kb3MgPT09IG51bGwpIHJldHVyblxuICAgIGZvciAobGV0IHRvZG8gb2YgYWxsVG9kb3MpIHtcbiAgICAgICAgaWYgKHRvZG8uZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpID09PSBsaXN0TnVtYmVyKSB7XG4gICAgICAgICAgICB0b2RvLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRvZG8uc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVJlbGF0ZWRUb2RvKGNvbnRhaW5lciwgYWxsVG9kb3MsIGxpc3ROdW1iZXIpe1xuICAgIGZvciAobGV0IHRvZG8gb2YgYWxsVG9kb3MpIHtcbiAgICAgICAgY29uc3QgbGlzdF9udW0gPSB0b2RvLmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKTtcbiAgICAgICAgaWYgKGxpc3RfbnVtID09PSBsaXN0TnVtYmVyKSB7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQodG9kbyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIDxkaXYgY2xhc3M9XCJhLXRvZG9cIj5cbi8vICAgICA8ZGl2IGNsYXNzPVwiYS1saXN0XCI+XG4vLyAgICAgICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4vLyAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cImljb25zL3BsdXMucG5nXCIgYWx0PVwiXCI+XG4vLyAgICAgICAgICAgICA8ZGl2Pm5hbWUgb2YgdGhlIHRvZG88L2Rpdj5cbi8vICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPlxuLy8gICAgICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIkVcIj5cbi8vICAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJpY29uXCIgc3JjPVwiaWNvbnMvcGx1cy5wbmdcIiBhbHQ9XCJVXCI+XG4vLyAgICAgICAgICAgICA8aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cImljb25zL3BsdXMucG5nXCIgYWx0PVwiRFwiPlxuLy8gICAgICAgICAgICAgPGltZyBjbGFzcz1cImljb25cIiBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cIkRlbFwiPlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICA8L2Rpdj5cbi8vICAgICA8ZGl2IGNsYXNzPVwiZGVzY3JpcHRpb25cIiBpZD1cImhpZGVcIj5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gRXNzZSBpcHNhbSBmdWdpYXQgZXVtIGhpYyBpcHN1bSBkb2xvcnVtIGJsYW5kaXRpaXMgaXVzdG8gZGVsZW5pdGkgcGVyZmVyZW5kaXMgZW5pbSBuaXNpIGFkaXBpc2NpIGl1cmUgbmF0dXMgYWQgbWF4aW1lLCBhbWV0LCBjb3Jwb3JpcyBxdWlidXNkYW0gYWxpcXVhbSE8L2Rpdj5cbi8vICAgICA8ZGl2IGNsYXNzPVwiY29sbGFwc2VcIj5cbi8vICAgICAgICAgPGltZyBzcmM9XCJpY29ucy9wbHVzLnBuZ1wiIGFsdD1cImNvbGxhcHNlIGljb25cIj5cbi8vICAgICA8L2Rpdj5cbi8vIDwvZGl2PlxuXG4iLCJpbXBvcnQgTGlzdCBmcm9tICcuL2xpc3QnXG5pbXBvcnQgVG9kbyBmcm9tICcuL3RvZG8nXG5cblxuXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVRvZG8oYW5BcnJheSwgbCkge1xuICAgIGxldCB0ID0gMDtcbiAgICBmb3IgKGxldCB0b2RvIG9mIGFuQXJyYXkpIHtcbiAgICAgICAgbGV0IHRpdGxlID0gdG9kby5nZXRUaXRsZTtcbiAgICAgICAgbGV0IGRlc2NyaXB0aW9uID0gdG9kby5nZXREZXNjcmlwdGlvbjtcbiAgICAgICAgbGV0IGR1ZURhdGUgPSB0b2RvLmR1ZURhdGU7XG4gICAgICAgIGxldCBwcmlvcml0eSA9IHRvZG8uZ2V0UHJpb3JpdHk7XG4gICAgICAgIGxldCBsaXN0TnVtYmVyID0gdG9kby5nZXRMaXN0TnVtYmVyO1xuICAgICAgICBsZXQgY29tcGxldGVkID0gdG9kby5nZXRJc0NvbXBsZXRlZDtcbiAgICAgICAgbGV0IHRvZG9OdW1iZXIgPSB0b2RvLmdldFRvZG9OdW1iZXI7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBsaXN0XyR7bH1fdG9kb18ke3R9YCwgYCR7dGl0bGV9LCR7ZGVzY3JpcHRpb259LCR7ZHVlRGF0ZX0sJHtwcmlvcml0eX0sJHtsaXN0TnVtYmVyfSwke2NvbXBsZXRlZH0sJHt0b2RvTnVtYmVyfWApO1xuICAgICAgICB0Kys7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlRGF0YShsaXN0cywgYWN0aXZlTGlzdE51bWJlcikge1xuICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpXG4gICAgbGV0IGwgPSAwO1xuXG4gICAgLy8gc2F2ZSBsaXN0c1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhY3RpdmVMaXN0TnVtYmVyJywgYWN0aXZlTGlzdE51bWJlcik7XG4gICAgZm9yIChsZXQgZWxlbSBvZiBsaXN0cykge1xuICAgICAgICBsZXQgbGlzdFRpdGxlID0gZWxlbS5nZXRUaXRsZTtcbiAgICAgICAgbGV0IGxpc3ROdW1iZXIgPSBlbGVtLmdldExpc3ROdW1iZXI7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBsaXN0XyR7bH1gLCBgJHtsaXN0VGl0bGV9LCR7bGlzdE51bWJlcn1gKTtcbiAgICAgICAgc2F2ZVRvZG8oZWxlbS5nZXRUb2RvcywgbCk7XG4gICAgICAgIGwrKztcbiAgICB9XG59XG5cblxuZnVuY3Rpb24gc29ydEFycmF5cyhhcnJheUxpc3RzKSB7XG4gICAgY29uc3QgbmV3TGlzdHMgPSBhcnJheUxpc3RzLnNvcnQoKGEsYikgPT4ge1xuICAgICAgICBpZiAoYS5nZXRMaXN0TnVtYmVyID4gYi5nZXRMaXN0TnVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gbmV3TGlzdHM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFRvZG9zVG9MaXN0cyhmaW5hbEFycmF5LCBhcnJheVRvZG9zKSB7XG4gICAgZm9yIChsZXQgdG9kbyBvZiBhcnJheVRvZG9zKSB7XG4gICAgICAgIGZpbmFsQXJyYXlbdG9kby5nZXRMaXN0TnVtYmVyXS5nZXRUb2Rvcy5wdXNoKHRvZG8pO1xuICAgIH1cbiAgICAvLyBzb3J0IHRoZSB0b2Rvc1xuICAgIGZvciAobGV0IGxpc3Qgb2YgZmluYWxBcnJheSkge1xuICAgICAgICBjb25zdCBuZXdUb2RvID0gbGlzdC5nZXRUb2Rvcy5zb3J0KChhLGIpID0+IHtcbiAgICAgICAgICAgIGlmIChhLmdldFRvZG9OdW1iZXIgPiBiLmdldFRvZG9OdW1iZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgbGlzdC5zZXRUb2RvcyA9IG5ld1RvZG87XG4gICAgfVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkRGF0YSgpIHtcbiAgICBsZXQgYXJyYXlMaXN0cyA9IFtdO1xuICAgIGxldCBhcnJheVRvZG9zID0gW107XG4gICAgZm9yIChsZXQgZWxlbSBpbiBsb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgaWYgKGVsZW0uaW5jbHVkZXMoJ2xpc3QnKSAmJiAhZWxlbS5pbmNsdWRlcygndG9kbycpKSB7XG4gICAgICAgICAgICBjb25zdCBsaXN0RGV0YWlscyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGVsZW0pLnNwbGl0KCcsJyk7XG4gICAgICAgICAgICBjb25zdCB0aXRsZSA9IGxpc3REZXRhaWxzWzBdO1xuICAgICAgICAgICAgY29uc3QgbGlzdE51bWJlciA9IHBhcnNlSW50KGxpc3REZXRhaWxzWzFdKVxuICAgICAgICAgICAgY29uc3QgbmV3TGlzdCA9IG5ldyBMaXN0KHRpdGxlLCBbXSwgbGlzdE51bWJlcik7XG4gICAgICAgICAgICBhcnJheUxpc3RzLnB1c2gobmV3TGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZWxlbS5pbmNsdWRlcygndG9kbycpKSB7XG4gICAgICAgICAgICBjb25zdCB0b2RvRGV0YWlscyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGVsZW0pLnNwbGl0KCcsJyk7XG4gICAgICAgICAgICBjb25zdCB0aXRsZSA9IHRvZG9EZXRhaWxzWzBdO1xuICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSB0b2RvRGV0YWlsc1sxXTtcbiAgICAgICAgICAgIGNvbnN0IGR1ZURhdGUgPSB0b2RvRGV0YWlsc1syXTtcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gdG9kb0RldGFpbHNbM107XG4gICAgICAgICAgICBjb25zdCBsaXN0TnVtYmVyID0gcGFyc2VJbnQodG9kb0RldGFpbHNbNF0pO1xuICAgICAgICAgICAgY29uc3QgY29tcGxldGVkID0gcGFyc2VJbnQodG9kb0RldGFpbHNbNV0pO1xuICAgICAgICAgICAgY29uc3QgdG9kb051bWJlciA9IHBhcnNlSW50KHRvZG9EZXRhaWxzWzZdKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1RvZG8gPSBuZXcgVG9kbyh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBsaXN0TnVtYmVyLCBjb21wbGV0ZWQsIHRvZG9OdW1iZXIpO1xuICAgICAgICAgICAgYXJyYXlUb2Rvcy5wdXNoKG5ld1RvZG8pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBmaW5hbEFycmF5ID0gc29ydEFycmF5cyhhcnJheUxpc3RzKTtcbiAgICBpbnNlcnRUb2Rvc1RvTGlzdHMoZmluYWxBcnJheSwgYXJyYXlUb2Rvcyk7XG4gICAgcmV0dXJuIGZpbmFsQXJyYXk7XG4gICAgY29uc29sZS5sb2coJ3ByaW50aW5nIHRoZSBjb252ZXJ0ZWQgYXJyYXknKVxuICAgIGNvbnNvbGUubG9nKGZpbmFsQXJyYXkpO1xufSIsImltcG9ydCBMaXN0IGZyb20gJy4vbGlzdCdcbmltcG9ydCBUb2RvIGZyb20gJy4vdG9kbydcbmltcG9ydCB7bGlzdHMsIGFkZE5ld0xpc3RJbnRlcmZhY2UsIHJlbW92ZUV4aXN0aW5nTWFya2VyLCB1cGRhdGVMaXN0c0FuZFRvZG9zLCB1cGRhdGVBcnJheUFuZFRvZG99IGZyb20gJy4vbWFuYWdlTGlzdEludGVyZmFjZSdcbmltcG9ydCB7YWRkTmV3VG9kb0ludGVyZmFjZSwgY2hhbmdlVG9kb0hlYWRlciwgc2hvd0xpc3RzVG9kb3MsIGRlbGV0ZVJlbGF0ZWRUb2RvfSBmcm9tICcuL21hbmFnZVRvZG9JbnRlcmZhY2UnXG5pbXBvcnQge3NhdmVEYXRhLCBsb2FkRGF0YX0gZnJvbSAnLi9zdG9yYWdlTWFuYWdlbWVudCdcblxubGV0IGFjdGl2ZUxpc3ROdW1iZXIgPSAnMCc7XG5cblxuZnVuY3Rpb24gYWRkTGlzdChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgLy8gbWFuYWdlIEFycmF5IG9mIGxpc3RzXG4gICAgbGV0IG5ld0xpc3QgPSBuZXcgTGlzdChuZXdMaXN0aW5wdXQudmFsdWUsIFtdLCBsaXN0cy5sZW5ndGgpO1xuICAgIHJlbW92ZUV4aXN0aW5nTWFya2VyKGFsbExpc3QpO1xuICAgIGNvbnN0IG5ld0xpc3RET00gPSBhZGROZXdMaXN0SW50ZXJmYWNlKG5ld0xpc3QsIGFsbExpc3QsIG5ld0xpc3RNb2RhbCk7XG4gICAgbmV3TGlzdERPTS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FjdGl2ZS1saXN0Jyk7XG4gICAgY29uc3QgYWxsVG9kb3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hLXRvZG8nKSk7XG5cbiAgICAvLyBtYW5hZ2UgdG9kbyBpbnRlcmZhY2VcbiAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIG5ld0xpc3QuZ2V0TGlzdE51bWJlciwgbmV3TGlzdC5nZXRUaXRsZSk7XG4gICAgc2hvd0xpc3RzVG9kb3MoYWxsVG9kb3MsIG5ld0xpc3QuZ2V0TGlzdE51bWJlci50b1N0cmluZygpKTtcbiAgICBhY3RpdmVMaXN0TnVtYmVyID0gbmV3TGlzdC5nZXRMaXN0TnVtYmVyLnRvU3RyaW5nKCk7XG4gICAgbmV3TGlzdERPTS5vbmNsaWNrID0gbWFrZUxpc3RBY3RpdmU7XG4gICAgZS50YXJnZXQucmVzZXQoKTtcbiAgICBuZXdMaXN0TW9kYWwuc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG4gICAgY29uc29sZS5sb2cobGlzdHMpO1xuICAgIHNhdmVEYXRhKGxpc3RzLCBhY3RpdmVMaXN0TnVtYmVyKTtcbn1cblxuXG5mdW5jdGlvbiBhZGRfYV9Ub2RvKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAvLyBtYW5hZ2UgQXJyYXkgb2YgbGlzdHNcbiAgICBjb25zdCBsaXN0TnVtYmVyID0gcGFyc2VJbnQodG9kb0hlYWRlci5nZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJykpO1xuICAgIGNvbnN0IHRvZG9OdW1iZXIgPSBsaXN0c1twYXJzZUludChsaXN0TnVtYmVyKV0uZ2V0VG9kb3MubGVuZ3RoO1xuICAgIGxldCBuZXdUb2RvID0gbmV3IFRvZG8odG9kb05hbWUudmFsdWUsIGRlc2NyaXB0aW9uLnZhbHVlLCBkdWVEYXRlLnZhbHVlLCBwcmlvcml0eS52YWx1ZSwgbGlzdE51bWJlciwgMCwgdG9kb051bWJlcik7XG4gICAgbGlzdHNbcGFyc2VJbnQobGlzdE51bWJlcildLmdldFRvZG9zLnB1c2gobmV3VG9kbyk7XG5cblxuICAgIC8vIGJyaW5nIHRoZSB0b2RvIGludGVyZmFjZVxuICAgIGNvbnN0IG5ld1RvZG9ET00gPSBhZGROZXdUb2RvSW50ZXJmYWNlKGFsbFRvZG8sIG5ld1RvZG8pO1xuICAgIG5ld1RvZG9ET00ub25jbGljayA9IG1vZGlmeVRvZG87XG5cbiAgICAvLyBoaWRlIG1vZGFsXG4gICAgbmV3VG9kb01vZGFsLnNldEF0dHJpYnV0ZSgnaWQnLCAnaGlkZScpO1xuICAgIGUudGFyZ2V0LnJlc2V0KCk7XG4gICAgY29uc29sZS50YWJsZShsaXN0cyk7XG4gICAgc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpO1xufVxuXG5cbmZ1bmN0aW9uIG1ha2VMaXN0QWN0aXZlKGUpIHtcbiAgICAvLyBoYW5kbGUgZGVsZXRlLCB1cCwgZG93biwgY29tcGxldGVcbiAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LnZhbHVlID09PSAnZGVsZXRlJykge1xuICAgICAgICBkZWxldGVFbGVtZW50KHRoaXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVtb3ZlRXhpc3RpbmdNYXJrZXIoYWxsTGlzdCk7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdpZCcsICdhY3RpdmUtbGlzdCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gZ2V0IHRoZSBsaXN0T2JqZWN0XG4gICAgICAgIGxldCBsaXN0TnVtYmVyID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIGxpc3ROdW1iZXIsIHRoaXMuZmlyc3RFbGVtZW50Q2hpbGQubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCk7XG4gICAgICAgIGNvbnN0IGFsbFRvZG9zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYS10b2RvJykpO1xuICAgICAgICBzaG93TGlzdHNUb2RvcyhhbGxUb2RvcywgbGlzdE51bWJlcik7XG4gICAgICAgIGFjdGl2ZUxpc3ROdW1iZXIgPSBsaXN0TnVtYmVyO1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWN0aXZlTGlzdE51bWJlcicpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWN0aXZlTGlzdE51bWJlcicsIGFjdGl2ZUxpc3ROdW1iZXIpO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGxpc3RzKTtcbn1cblxuXG5mdW5jdGlvbiBzaG93UmVsYXRlZFRvZG9zKHgsIGxpc3RObyl7XG4gICAgaWYgKGxpc3RzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIG51bGwsICdBZGQgYSBMaXN0Jyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGxpc3RObyA9PT0gYDBgKSB7XG4gICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsLWxpc3QgZGl2W2xpc3QtbnVtYmVyPVwiMFwiXScpO1xuICAgICAgICBhY3RpdmVMaXN0LnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICAgICAgY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCBsaXN0Tm8sIGxpc3RzWzBdLmdldFRpdGxlKTtcbiAgICAgICAgc2hvd0xpc3RzVG9kb3MoeCwgYDBgKTtcbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9ICcwJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuYWxsLWxpc3QgZGl2W2xpc3QtbnVtYmVyPVwiJHtwYXJzZUludChsaXN0Tm8pLTF9XCJdYCk7XG4gICAgICAgIGFjdGl2ZUxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdhY3RpdmUtbGlzdCcpO1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIGxpc3RObywgbGlzdHNbcGFyc2VJbnQobGlzdE5vKS0xXS5nZXRUaXRsZSk7XG4gICAgICAgIHNob3dMaXN0c1RvZG9zKHgsIGAke3BhcnNlSW50KGxpc3RObyktMX1gKTtcbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9IGAke3BhcnNlSW50KGxpc3RObyktMX1gO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiBkZWxldGVFbGVtZW50KGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QudmFsdWUgPT09ICdhLWxpc3QnKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJyk7XG4gICAgICAgIC8vIHJlbW92ZUV4aXN0aW5nTWFya2VyKGFsbExpc3QpO1xuICAgICAgICBhbGxMaXN0LnJlbW92ZUNoaWxkKGVsZW1lbnQpXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmEtbGlzdCcpKTtcbiAgICAgICAgbGV0IHggPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGwtdG9kbyAuYS10b2RvJykpO1xuICAgICAgICBkZWxldGVSZWxhdGVkVG9kbyhhbGxUb2RvLCB4LCBpbmRleCk7XG4gICAgICAgIHggPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGwtdG9kbyAuYS10b2RvJykpO1xuICAgICAgICB1cGRhdGVMaXN0c0FuZFRvZG9zKGNvbnRhaW5lciwgaW5kZXgsIHgpO1xuICAgICAgICBpZiAoaW5kZXggPT09IGFjdGl2ZUxpc3ROdW1iZXIpIHtcbiAgICAgICAgICAgIHNob3dSZWxhdGVkVG9kb3MoeCwgaW5kZXgpO31cbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9IGluZGV4O1xuICAgIH1cbiAgICBzYXZlRGF0YShsaXN0cywgYWN0aXZlTGlzdE51bWJlcik7XG59XG5cbmZ1bmN0aW9uIGNoYW5nZUNoZWNrKGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudC5jaGVja2VkID09PSB0cnVlKSB7XG4gICAgICAgIGVsZW1lbnQuY2hlY2tlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5jaGVja2VkID0gdHJ1ZTtcbiAgICB9XG59XG5cblxuZnVuY3Rpb24gbW9kaWZ5VG9kbyhlKSB7XG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC52YWx1ZSA9PT0gJ2RlbGV0ZScpIHtcbiAgICAgICAgY29uc3QgbGlzdE51bWJlciA9IHRoaXMuZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICBjb25zdCB0b2RvTnVtYmVyID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJyk7XG5cbiAgICAgICAgLy8gZGVsZXRlIHRvZG8gZnJvbSB0aGUgbGlzdHMgQXJyYXkgYW5kIHRoZSBkb21cbiAgICAgICAgbGlzdHNbcGFyc2VJbnQobGlzdE51bWJlcildLmdldFRvZG9zLnNwbGljZShwYXJzZUludCh0b2RvTnVtYmVyKSwgMSk7XG4gICAgICAgIGNvbnNvbGUudGFibGUobGlzdHMpO1xuICAgICAgICBhbGxUb2RvLnJlbW92ZUNoaWxkKHRoaXMpO1xuXG4gICAgICAgIC8vIHVwZGF0ZSB0b2RvIGFycmF5XG4gICAgICAgIGNvbnN0IGFsbFRvZG9zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWxsLXRvZG8gLmEtdG9kbycpKTtcbiAgICAgICAgdXBkYXRlQXJyYXlBbmRUb2RvKGFsbFRvZG9zKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3R5cGUnKSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgY2hhbmdlQ2hlY2soZS50YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxpc3ROdW1iZXIgPSB0aGlzLmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKTtcbiAgICAgICAgY29uc3QgdG9kb051bWJlciA9IHRoaXMuZ2V0QXR0cmlidXRlKCd0b2RvLW51bWJlcicpO1xuICAgICAgICBsZXQgdGhlTGlzdCA9IGxpc3RzW3BhcnNlSW50KGxpc3ROdW1iZXIpXTtcbiAgICAgICAgbGV0IHRoZVRvZG8gPSB0aGVMaXN0LmdldFRvZG9zW3BhcnNlSW50KHRvZG9OdW1iZXIpXTtcbiAgICAgICAgdGhlVG9kby5jaGFuZ2VDb21wbGV0ZVN0YXR1cygpO1xuICAgICAgICBjaGFuZ2VDaGVjayh0aGlzLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkKTtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5maXJzdEVsZW1lbnRDaGlsZC5maXJzdEVsZW1lbnRDaGlsZC5maXJzdEVsZW1lbnRDaGlsZCk7XG4gICAgfVxuICAgIHNhdmVEYXRhKGxpc3RzLCBhY3RpdmVMaXN0TnVtYmVyKTtcbn1cblxuXG4vLyB0aGVyZSBpcyBhbiBlZGdlIGNhc2Vcbi8vIDEuIHdoYXQgaWYgdGhlIHBhZ2UgaXMgZW1wdHk/XG4vLyAyLiBcblxuLy8gdGVzdFxuLy8gY2hlY2sgaWYgYWN0aXZhdGVkIGluIHRoZSBsYXN0IGxpc3Rcbi8vIFxuZnVuY3Rpb24gbG9hZFBhZ2UoYW5BcnJheSkge1xuICAgIGlmIChhbkFycmF5Lmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGZvciAobGV0IGxpc3Qgb2YgYW5BcnJheSkge1xuICAgICAgICBhZGROZXdMaXN0SW50ZXJmYWNlKGxpc3QsIGFsbExpc3QsIG5ld0xpc3RNb2RhbCk7XG4gICAgICAgIGZvciAobGV0IHRvZG8gb2YgbGlzdC5nZXRUb2Rvcykge1xuICAgICAgICAgICAgYWRkTmV3VG9kb0ludGVyZmFjZShhbGxUb2RvLCB0b2RvKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhY3RpdmVMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmFsbC1saXN0IGRpdltsaXN0LW51bWJlcj1cIiR7YWN0aXZlTGlzdE51bWJlcn1cIl1gKTtcbiAgICAvLyByZW1vdmVFeGlzdGluZ01hcmtlcihhbGxMaXN0KTtcbiAgICBpZiAoYWN0aXZlTGlzdCAhPT0gbnVsbCkge1xuICAgICAgICBhY3RpdmVMaXN0LnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICB9XG4gICAgY29uc3QgYWxsVG9kb3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hLXRvZG8nKSk7XG4gICAgY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCBhY3RpdmVMaXN0TnVtYmVyLCBsaXN0c1twYXJzZUludChhY3RpdmVMaXN0TnVtYmVyKV0uZ2V0VGl0bGUpO1xuICAgIHNob3dMaXN0c1RvZG9zKGFsbFRvZG9zLCBhY3RpdmVMaXN0TnVtYmVyKTtcbn1cblxuXG4vLyAjIyMjIyMjIyMjIyMjIyBNQUlOIEZVTkNUSU9OICMjIyMjIyMjIyMjIyMjIyMjXG5cblxuLy8gQWxsIGdsb2JhbCB2YXJpYWJsZXMgYW5kIGV2ZW50TGlzdGVuZXJzXG5jb25zdCBhbGxMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsbC1saXN0Jyk7XG5jb25zdCBuZXdMaXN0aW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGlzdC1uYW1lJyk7XG5jb25zdCBsaXN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0LWZvcm0nKTtcbmNvbnN0IGFkZE5ld0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLW5ldy1saXN0Jyk7XG5jb25zdCBuZXdMaXN0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3LWxpc3QtbW9kYWwnKTtcbmNvbnN0IGFkZFRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXRvZG8nKTtcbmNvbnN0IG5ld1RvZG9Nb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXctdG9kby1tb2RhbCcpO1xuY29uc3QgdG9kb0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kby1mb3JtJyk7XG5jb25zdCB0b2RvTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0b2RvLW5hbWUnKTtcbmNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZHVlLWRhdGUnKTtcbmNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3ByaW9yaXR5Jyk7XG5jb25zdCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkZXNjcmlwdGlvbicpO1xuY29uc3QgYWxsVG9kbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGwtdG9kbycpO1xuY29uc3QgdG9kb0hlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWhlYWRlcicpO1xuXG5cblxuLy8gbG9hZGluZyB0aGUgZXhpc3RpbmcgZGF0YVxuaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY3RpdmVMaXN0TnVtYmVyJykpIHtcbiAgICBsZXQgYW5BcnJheSA9IGxvYWREYXRhKCk7XG4gICAgYWN0aXZlTGlzdE51bWJlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY3RpdmVMaXN0TnVtYmVyJyk7XG4gICAgbG9hZFBhZ2UoYW5BcnJheSk7XG4gICAgLy8gbG9hZFBhZ2UoYW5BcnJheSk7XG59XG5lbHNlIHtcbiAgICAvLyBBZGRpbmcgZGVmYXVsdCBsaXN0XG4gICAgbGV0IGRlZmF1bHRMaXN0ID0gbmV3IExpc3QoJ015IERheScsIFtdLCAwKTtcbiAgICBhZGROZXdMaXN0SW50ZXJmYWNlKGRlZmF1bHRMaXN0LCBhbGxMaXN0LCBuZXdMaXN0TW9kYWwpO1xuICAgIGNoYW5nZVRvZG9IZWFkZXIodG9kb0hlYWRlciwgJzAnLCAnTXkgRGF5Jyk7XG4gICAgY29uc3QgYWN0aXZlTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5hbGwtbGlzdCBkaXZbbGlzdC1udW1iZXI9XCIke2RlZmF1bHRMaXN0LmdldExpc3ROdW1iZXJ9XCJdYCk7XG4gICAgYWN0aXZlTGlzdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FjdGl2ZS1saXN0Jyk7XG4gICAgc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpO1xufVxuXG5cbmNvbnN0IGRlZmF1bHRMaXN0RE9NID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFsbC1saXN0IC5hLWxpc3QnKTtcbmNvbnN0IGFsbFRvZG9ET01TID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFsbC10b2RvIC5hLXRvZG8nKTtcblxuYWRkVG9kby5vbmNsaWNrID0gKCkgPT4ge1xuICAgIG5ld1RvZG9Nb2RhbC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG59XG5cbmFkZE5ld0xpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgbmV3TGlzdE1vZGFsLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbn0pXG5cblxubGlzdEZvcm0ub25zdWJtaXQgPSBhZGRMaXN0O1xubGlzdEZvcm0ub25yZXNldCA9ICgpID0+IHtcbiAgICBuZXdMaXN0TW9kYWwuc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG59XG5cbnRvZG9Gb3JtLm9uc3VibWl0ID0gYWRkX2FfVG9kbztcbnRvZG9Gb3JtLm9ucmVzZXQgPSAoKSA9PiB7XG4gICAgbmV3VG9kb01vZGFsLnNldEF0dHJpYnV0ZSgnaWQnLCAnaGlkZScpO1xufVxuXG5kZWZhdWx0TGlzdERPTS5mb3JFYWNoKGxpc3QgPT4ge1xuICAgIGxpc3Qub25jbGljayA9IG1ha2VMaXN0QWN0aXZlO1xufSk7XG5cbmFsbFRvZG9ET01TLmZvckVhY2godG9kbyA9PiB7XG4gICAgdG9kby5vbmNsaWNrID0gbW9kaWZ5VG9kbztcbn0pOyJdLCJuYW1lcyI6WyJMaXN0IiwiY29uc3RydWN0b3IiLCJ0aXRsZSIsInRvZG9zIiwibGlzdE51bWJlciIsInRoaXMiLCJnZXRMaXN0TnVtYmVyIiwic2V0TGlzdE51bWJlciIsInZhbHVlIiwiZ2V0VGl0bGUiLCJnZXRUb2RvcyIsInNldFRvZG9zIiwic2V0VGl0bGUiLCJhZGROZXdMaXN0IiwidGhlVG9kbyIsInB1c2giLCJUb2RvIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJjb21wbGV0ZWQiLCJ0b2RvTnVtYmVyIiwiZ2V0VG9kb051bWJlciIsInNldFRvZG9OdW1iZXIiLCJnZXRJc0NvbXBsZXRlZCIsImNoYW5nZUNvbXBsZXRlU3RhdHVzIiwiZ2V0RGVzY3JpcHRpb24iLCJnZXREdWVEYXRlIiwiZ2V0UHJpb3JpdHkiLCJzZXREZXNjcmlwdGlvbiIsInNldER1ZURhdGUiLCJzZXRQcmlvcml0eSIsImxpc3RzIiwiYWRkTmV3TGlzdEludGVyZmFjZSIsImxpc3RPYmplY3QiLCJjb250YWluZXIiLCJpbnNlcnRfYmVmb3JlIiwiYUxpc3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRCZWZvcmUiLCJsZWZ0IiwiYXBwZW5kQ2hpbGQiLCJyaWdodCIsImljb24xIiwibGlzdFRpdGxlIiwidGV4dENvbnRlbnQiLCJpY29uMiIsImljb24zIiwiaWNvbjQiLCJpY29uNSIsInJlbW92ZUV4aXN0aW5nTWFya2VyIiwibGVuZ3RoIiwiZmlyc3RMaXN0IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJuZXh0TGlzdCIsIm5leHRFbGVtZW50U2libGluZyIsInVwZGF0ZUFycmF5QW5kVG9kbyIsImFsbFRvZG9zIiwiYWxsVG9kb0luZGV4IiwiaSIsInRvZG9fbm8iLCJsaXN0X25vIiwieCIsInRoZURPTSIsImFkZE5ld1RvZG9JbnRlcmZhY2UiLCJhVG9kbyIsImNvbGxhcHNlIiwiY29sbGFwc2VJbWciLCJpbnB1dDEiLCJjaGVja2VkIiwidGl0bGVUb2RvIiwiY2hhbmdlVG9kb0hlYWRlciIsInRvZG9IZWFkZXIiLCJzaG93TGlzdHNUb2RvcyIsInRvZG8iLCJzYXZlVG9kbyIsImFuQXJyYXkiLCJsIiwidCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJzYXZlRGF0YSIsImFjdGl2ZUxpc3ROdW1iZXIiLCJjbGVhciIsImVsZW0iLCJtYWtlTGlzdEFjdGl2ZSIsImUiLCJ0YXJnZXQiLCJlbGVtZW50IiwiaW5kZXgiLCJhbGxMaXN0IiwicmVtb3ZlQ2hpbGQiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVsZXRlUmVsYXRlZFRvZG8iLCJhbGxUb2RvIiwic3BsaWNlIiwicGFyc2VJbnQiLCJsaXN0IiwidXBkYXRlTGlzdHNBbmRUb2RvcyIsImxpc3RObyIsInF1ZXJ5U2VsZWN0b3IiLCJzaG93UmVsYXRlZFRvZG9zIiwiZGVsZXRlRWxlbWVudCIsImxhc3RFbGVtZW50Q2hpbGQiLCJyZW1vdmVJdGVtIiwiY29uc29sZSIsImxvZyIsImNoYW5nZUNoZWNrIiwibW9kaWZ5VG9kbyIsInRhYmxlIiwibmV3TGlzdGlucHV0IiwibGlzdEZvcm0iLCJuZXdMaXN0TW9kYWwiLCJhZGRUb2RvIiwibmV3VG9kb01vZGFsIiwidG9kb0Zvcm0iLCJ0b2RvTmFtZSIsImdldEl0ZW0iLCJhcnJheUxpc3RzIiwiYXJyYXlUb2RvcyIsImluY2x1ZGVzIiwibGlzdERldGFpbHMiLCJzcGxpdCIsIm5ld0xpc3QiLCJ0b2RvRGV0YWlscyIsIm5ld1RvZG8iLCJmaW5hbEFycmF5Iiwic29ydCIsImEiLCJiIiwic29ydEFycmF5cyIsImluc2VydFRvZG9zVG9MaXN0cyIsImxvYWREYXRhIiwiYWN0aXZlTGlzdCIsImxvYWRQYWdlIiwiZGVmYXVsdExpc3QiLCJkZWZhdWx0TGlzdERPTSIsImFsbFRvZG9ET01TIiwib25jbGljayIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbnN1Ym1pdCIsInByZXZlbnREZWZhdWx0IiwibmV3TGlzdERPTSIsInRvU3RyaW5nIiwicmVzZXQiLCJvbnJlc2V0IiwiZm9yRWFjaCJdLCJzb3VyY2VSb290IjoiIn0=