(()=>{"use strict";class t{constructor(t,e,i,l=0){this.title=t,this.todos=e,this.listNumber=i,this.isDefault=l}get getIsDefault(){return this.isDefault}set setIsDefault(t){this.isDefault=t}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,l,s,o,r){this.title=t,this.description=e,this.dueDate=i,this.priority=l,this.listNumber=s,this.completed=o,this.todoNumber=r}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function l(t,e,l){i.push(t);const s=document.createElement("div");s.classList.add("a-list"),s.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(s,l);const o=document.createElement("div");o.classList.add("left"),s.appendChild(o);const r=document.createElement("div");r.classList.add("right"),s.appendChild(r);const n=document.createElement("img");n.classList.add("icon"),1===t.getIsDefault?n.setAttribute("src","icons/weather-sunny.png"):n.setAttribute("src","icons/todo.png"),o.appendChild(n);const d=document.createElement("div");d.classList.add("list-title"),d.textContent=t.getTitle,o.appendChild(d);const u=document.createElement("img");u.classList.add("edit"),u.setAttribute("src","icons/pencil.png"),r.appendChild(u);const c=document.createElement("img");return c.classList.add("delete"),c.setAttribute("src","icons/trash.png"),r.appendChild(c),s}function s(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function o(t){let e=0;for(let l=0;l<i.length;l++)if(i[l].setListNumber=l,0!==i[l].getTodos.length){let s=0;const o=i[l].getListNumber;for(let r of i[l].getTodos){r.setListNumber=l,r.setTodoNumber=s;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${o}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${s}`),s++,e++}}}let r=[];function n(t,e){r.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),"none"===e.getPriority?i.classList.toggle("none"):"medium"===e.getPriority?i.classList.toggle("medium"):"high"===e.getPriority?i.classList.toggle("high"):"normal"===e.getPriority&&i.classList.toggle("normal"),t.appendChild(i);const l=document.createElement("div");l.classList.add("a-list"),i.appendChild(l);const s=document.createElement("div");s.classList.add("description"),s.textContent=e.getDescription,i.appendChild(s);const o=document.createElement("div");o.classList.add("collapse"),i.appendChild(o);const n=document.createElement("div");n.classList.add("left"),l.appendChild(n);const d=document.createElement("div");d.classList.add("right"),l.appendChild(d);const u=document.createElement("img");u.setAttribute("src","icons/unfold.png"),u.setAttribute("alt","collapse icon"),u.setAttribute("id","hide"),o.appendChild(u);const c=document.createElement("input");c.setAttribute("type","checkbox"),c.setAttribute("id","todo-checkbox"),c.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(c.checked=!0),n.appendChild(c);const a=document.createElement("div");a.textContent=`${e.getTitle} (Due: ${e.getDueDate})`,n.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/pencil.png"),m.classList.add("edit"),d.appendChild(m);const g=document.createElement("img");return g.setAttribute("src","icons/trash.png"),g.classList.add("delete"),d.appendChild(g),i}function d(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function u(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function c(t,e){let i=0;for(let l of t){let t=l.getTitle,s=l.getDescription,o=l.dueDate,r=l.getPriority,n=l.getListNumber,d=l.getIsCompleted,u=l.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${s},${o},${r},${n},${d},${u}`),i++}}function a(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,l=e.getListNumber;1===e.getIsDefault?localStorage.setItem(`list_${i}`,`${t},${l},1`):localStorage.setItem(`list_${i}`,`${t},${l}`),c(e.getTodos,i),i++}}let m="0";function g(t){var e;t.preventDefault(),console.log(m),i[parseInt(m)].setTitle=t.target.firstElementChild.value,t.target.previousElementSibling.textContent=t.target.firstElementChild.value,d($,m,t.target.firstElementChild.value),(e=t.target.parentNode.parentNode).firstElementChild.removeChild(e.firstElementChild.lastElementChild),e.firstElementChild.lastElementChild.removeAttribute("id"),a(i,m)}function h(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");p.removeChild(t);const l=Array.from(document.querySelectorAll(".a-list"));let s=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let l of e)l.getAttribute("list-number")===i&&t.removeChild(l)}(q,s,e),s=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,l){i.splice(parseInt(e),1);let s=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${s}`),s++;o(l)}(l,e,s),e===m&&function(t,e){0===i.length?d($,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),d($,e,i[0].getTitle),u(t,"0"),m="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),d($,e,i[parseInt(e)-1].getTitle),u(t,""+(parseInt(e)-1)),m=""+(parseInt(e)-1))}(s,e),m=document.querySelector("#active-list").getAttribute("list-number"),console.log(m)}a(i,m)}(this);else if("edit"===t.target.classList.value)(function(t){const e=t.firstElementChild.lastElementChild;e.setAttribute("id","hide");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("maxlength","30"),i.required=!0,i.value=e.textContent;const l=document.createElement("form");return l.setAttribute("action","#"),l.classList.add("edit-list-form"),t.firstElementChild.appendChild(l),l.appendChild(i),console.log(t),l}(this)).onsubmit=g;else{s(p),this.setAttribute("id","active-list");let t=this.getAttribute("list-number");d($,t,this.firstElementChild.lastElementChild.textContent),u(Array.from(document.querySelectorAll(".a-todo")),t),m=t,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",m)}console.log(i)}function b(t){!0===t.checked?t.checked=!1:t.checked=!0}function f(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),console.table(i),q.removeChild(this),o(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else if("edit"===t.target.classList.value){const t=document.querySelector(".edit-todo-modal");t.removeAttribute("id");const e=function(t,e,i){let l=t.getAttribute("list-number"),s=t.getAttribute("todo-number"),o=i[parseInt(l)].getTodos[parseInt(s)],r=e.firstElementChild.nextElementSibling;r.firstElementChild.value=o.getTitle,r.firstElementChild.nextElementSibling.lastElementChild.value=o.getDueDate;const n=o.getPriority;let d=r.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild;return function(t,e){let i=e.firstElementChild;for(;;){if(i.getAttribute("value")===t){i.selected=!0;break}i=i.nextElementSibling}}(n,d),d.parentNode.nextElementSibling.value=o.getDescription,o}(this,t,i),l=t.lastElementChild;l.onsubmit=t=>{!function(t,e){e.preventDefault();const l=document.querySelector(`.all-todo div[todo-number="${t.getTodoNumber}"]`);l.classList.remove(t.getPriority),t.setTitle=e.target.firstElementChild.value,t.setDueDate=e.target.firstElementChild.nextElementSibling.lastElementChild.value,t.setPriority=e.target.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild.value,t.setDescription=e.target.lastElementChild.previousElementSibling.value,e.target.parentNode.setAttribute("id","hide"),function(t,e){e.firstElementChild.firstElementChild.lastElementChild.textContent=`${t.getTitle} (Due: ${t.getDueDate})`,e.firstElementChild.nextElementSibling.textContent=`${t.getDescription}`,e.classList.toggle(t.getPriority)}(t,l),a(i,m)}(e,t)},l.onreset=()=>{t.setAttribute("id","hide")}}else{"checkbox"===t.target.getAttribute("type")&&b(t.target);const e=this.getAttribute("list-number"),l=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(l)].changeCompleteStatus(),b(this.firstElementChild.firstElementChild.firstElementChild),console.log(this.firstElementChild.firstElementChild.firstElementChild)}a(i,m)}const p=document.querySelector(".all-list"),A=document.querySelector("#list-name"),C=document.querySelector(".list-form"),E=document.querySelector(".add-new-list"),v=document.querySelector(".new-list-modal"),y=document.querySelector(".add-todo"),S=document.querySelector(".new-todo-modal"),L=document.querySelector(".todo-form"),N=document.querySelector("#todo-name"),T=document.querySelector("#due-date"),D=document.querySelector("#priority"),I=document.querySelector("#description"),q=document.querySelector(".all-todo"),$=document.querySelector(".todo-header");if(localStorage.getItem("activeListNumber")){let s=function(){let i=[],l=[];for(let s in localStorage)if(s.includes("list")&&!s.includes("todo")){const e=localStorage.getItem(s).split(","),l=e[0],o=parseInt(e[1]);if(3===e.length){const e=new t(l,[],o,1);i.push(e)}else{const e=new t(l,[],o);i.push(e)}}else if(s.includes("todo")){const t=localStorage.getItem(s).split(","),i=t[0],o=t[1],r=t[2],n=t[3],d=parseInt(t[4]),u=parseInt(t[5]),c=parseInt(t[6]),a=new e(i,o,r,n,d,u,c);l.push(a)}let s=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(s,l),s}();m=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){l(e,p,v);for(let t of e.getTodos)n(q,t)}const e=document.querySelector(`.all-list div[list-number="${m}"]`);null!==e&&e.setAttribute("id","active-list");const s=Array.from(document.querySelectorAll(".a-todo"));d($,m,i[parseInt(m)].getTitle),u(s,m),console.log(i)}(s)}else{let e=new t("My Day",[],0,1);l(e,p,v),d($,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),a(i,m)}const x=document.querySelectorAll(".all-list .a-list"),k=document.querySelectorAll(".all-todo .a-todo");y.onclick=()=>{S.removeAttribute("id")},E.addEventListener("click",(()=>{v.removeAttribute("id"),p.scrollTo(0,p.scrollHeight)})),C.onsubmit=function(e){console.log(e.target),e.preventDefault();let o=new t(A.value,[],i.length);s(p);const r=l(o,p,v);r.setAttribute("id","active-list");const n=Array.from(document.querySelectorAll(".a-todo"));d($,o.getListNumber,o.getTitle),u(n,o.getListNumber.toString()),m=o.getListNumber.toString(),r.onclick=h,e.target.reset(),v.setAttribute("id","hide"),p.scrollTo(0,p.scrollHeight),console.log(i),a(i,m)},C.onreset=()=>{v.setAttribute("id","hide")},L.onsubmit=function(t){t.preventDefault();const l=parseInt($.getAttribute("list-number")),s=i[parseInt(l)].getTodos.length;let o=new e(N.value,I.value,T.value,D.value,l,0,s);i[parseInt(l)].getTodos.push(o),n(q,o).onclick=f,S.setAttribute("id","hide"),q.scrollTo(0,q.scrollHeight),t.target.reset(),console.table(i),a(i,m)},L.onreset=()=>{S.setAttribute("id","hide")},x.forEach((t=>{t.onclick=h})),k.forEach((t=>{t.onclick=f}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFvQnlDLEVBQVM2QyxHQUNyQ2EsUUFBVTNDLEVBR3JCbUIsRUFBYXJHLGFBQWEsS0FBTSxRQUNoQ21FLEVBQVE0RCxTQUFTLEVBQUc1RCxFQUFRNkQsY0FDNUIvRSxFQUFFTSxPQUFPNEUsUUFDVC9FLFFBQVErQixNQUFNN0YsR0FDZHNELEVBQVN0RCxFQUFPdUQsRUFDcEIsRUFzT0F5RCxFQUFTTixRQUFVLEtBQ2ZLLEVBQWFyRyxhQUFhLEtBQU0sT0FBTyxFQUczQzJILEVBQWVTLFNBQVEvRCxJQUNuQkEsRUFBS3dELFFBQVVqRSxDQUFjLElBR2pDZ0UsRUFBWVEsU0FBUS9GLElBQ2hCQSxFQUFLd0YsUUFBVTNDLENBQVUsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8vLi9zcmMvbGlzdC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3RvZG8uanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9tYW5hZ2VMaXN0SW50ZXJmYWNlLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbWFuYWdlVG9kb0ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0b3JhZ2VNYW5hZ2VtZW50LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3Qge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCB0b2RvcywgbGlzdE51bWJlciwgaXNEZWZhdWx0PTApIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLnRvZG9zID0gdG9kb3M7XG4gICAgICAgIHRoaXMubGlzdE51bWJlciA9IGxpc3ROdW1iZXI7XG4gICAgICAgIHRoaXMuaXNEZWZhdWx0ID0gaXNEZWZhdWx0O1xuICAgIH1cblxuICAgIGdldCBnZXRJc0RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzRGVmYXVsdDtcbiAgICB9XG5cbiAgICBzZXQgc2V0SXNEZWZhdWx0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuaXNEZWZhdWx0ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0IGdldExpc3ROdW1iZXIoKSB7cmV0dXJuIHRoaXMubGlzdE51bWJlcn1cblxuICAgIHNldCBzZXRMaXN0TnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMubGlzdE51bWJlciA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBnZXRUaXRsZSgpIHtyZXR1cm4gdGhpcy50aXRsZX1cblxuICAgIGdldCBnZXRUb2RvcygpIHtyZXR1cm4gdGhpcy50b2Rvc31cblxuICAgIHNldCBzZXRUb2Rvcyh2YWx1ZSkge1xuICAgICAgICB0aGlzLnRvZG9zID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IHNldFRpdGxlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBzZXQgc2V0VG9kb3ModmFsdWUpIHtcbiAgICAgICAgdGhpcy50b2RvcyA9IHZhbHVlO1xuICAgIH1cblxuICAgIGFkZE5ld0xpc3QodGhlVG9kbykge1xuICAgICAgICB0aGlzLnRvZG9zLnB1c2godGhlVG9kbyk7XG4gICAgfVxufSIsIlxuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvZG8ge1xuXG4gICAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbGlzdE51bWJlciwgY29tcGxldGVkLCB0b2RvTnVtYmVyKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgICAgIHRoaXMubGlzdE51bWJlciA9IGxpc3ROdW1iZXI7XG4gICAgICAgIHRoaXMuY29tcGxldGVkID0gY29tcGxldGVkO1xuICAgICAgICB0aGlzLnRvZG9OdW1iZXIgPSB0b2RvTnVtYmVyO1xuICAgIH1cblxuICAgIGdldCBnZXRUb2RvTnVtYmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b2RvTnVtYmVyO1xuICAgIH1cblxuICAgIHNldCBzZXRUb2RvTnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudG9kb051bWJlciA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBnZXRJc0NvbXBsZXRlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGVkO1xuICAgIH1cblxuICAgIGNoYW5nZUNvbXBsZXRlU3RhdHVzKCkge1xuICAgICAgICBpZiAodGhpcy5jb21wbGV0ZWQgPT09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVkID0gMDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY29tcGxldGVkID0gMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldCBnZXRMaXN0TnVtYmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5saXN0TnVtYmVyO1xuICAgIH1cblxuICAgIHNldCBzZXRMaXN0TnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMubGlzdE51bWJlciA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBnZXRUaXRsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGU7XG4gICAgfVxuICAgIGdldCBnZXREZXNjcmlwdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVzY3JpcHRpb247XG4gICAgfVxuICAgIGdldCBnZXREdWVEYXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kdWVEYXRlO1xuICAgIH1cbiAgICBnZXQgZ2V0UHJpb3JpdHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaW9yaXR5O1xuICAgIH1cblxuICAgIHNldCBzZXRUaXRsZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnRpdGxlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IHNldERlc2NyaXB0aW9uKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSB2YWx1ZTtcbiAgICB9XG4gICAgc2V0IHNldER1ZURhdGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5kdWVEYXRlID0gdmFsdWU7XG4gICAgfVxuICAgIHNldCBzZXRQcmlvcml0eSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gdmFsdWU7XG4gICAgfVxufSIsIlxuXG5leHBvcnQgbGV0IGxpc3RzID0gW107XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGROZXdMaXN0SW50ZXJmYWNlKGxpc3RPYmplY3QsIGNvbnRhaW5lciwgaW5zZXJ0X2JlZm9yZSkge1xuXG4gICAgbGlzdHMucHVzaChsaXN0T2JqZWN0KTtcblxuICAgIGNvbnN0IGFMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYUxpc3QuY2xhc3NMaXN0LmFkZCgnYS1saXN0Jyk7XG4gICAgYUxpc3Quc2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicsIGAke2xpc3RPYmplY3QuZ2V0TGlzdE51bWJlcn1gKTtcbiAgICAvLyBhTGlzdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FjdGl2ZS1saXN0Jyk7XG4gICAgY29udGFpbmVyLmluc2VydEJlZm9yZShhTGlzdCwgaW5zZXJ0X2JlZm9yZSk7XG5cblxuICAgIGNvbnN0IGxlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZWZ0LmNsYXNzTGlzdC5hZGQoJ2xlZnQnKTtcbiAgICBhTGlzdC5hcHBlbmRDaGlsZChsZWZ0KTtcblxuICAgIGNvbnN0IHJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcmlnaHQuY2xhc3NMaXN0LmFkZCgncmlnaHQnKTtcbiAgICBhTGlzdC5hcHBlbmRDaGlsZChyaWdodCk7XG5cbiAgICBjb25zdCBpY29uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb24xLmNsYXNzTGlzdC5hZGQoJ2ljb24nKTtcbiAgICBpZiAobGlzdE9iamVjdC5nZXRJc0RlZmF1bHQgPT09IDEpIHtcbiAgICAgICAgaWNvbjEuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvd2VhdGhlci1zdW5ueS5wbmcnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGljb24xLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3RvZG8ucG5nJyk7XG4gICAgfVxuICAgIGxlZnQuYXBwZW5kQ2hpbGQoaWNvbjEpO1xuXG4gICAgY29uc3QgbGlzdFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGlzdFRpdGxlLmNsYXNzTGlzdC5hZGQoJ2xpc3QtdGl0bGUnKTtcbiAgICBsaXN0VGl0bGUudGV4dENvbnRlbnQgPSBsaXN0T2JqZWN0LmdldFRpdGxlO1xuICAgIGxlZnQuYXBwZW5kQ2hpbGQobGlzdFRpdGxlKTtcblxuICAgIGNvbnN0IGljb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaWNvbjIuY2xhc3NMaXN0LmFkZCgnZWRpdCcpO1xuICAgIGljb24yLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BlbmNpbC5wbmcnKTtcbiAgICByaWdodC5hcHBlbmRDaGlsZChpY29uMik7XG5cbiAgICAvLyBjb25zdCBpY29uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIC8vIGljb24zLmNsYXNzTGlzdC5hZGQoJ3VwLWFycm93Jyk7XG4gICAgLy8gaWNvbjMuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvYXJyb3ctdXAucG5nJyk7XG4gICAgLy8gcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjMpO1xuXG4gICAgLy8gY29uc3QgaWNvbjQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAvLyBpY29uNC5jbGFzc0xpc3QuYWRkKCdkb3duLWFycm93Jyk7XG4gICAgLy8gaWNvbjQuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvYXJyb3ctZG93bi5wbmcnKTtcbiAgICAvLyByaWdodC5hcHBlbmRDaGlsZChpY29uNCk7XG5cbiAgICBjb25zdCBpY29uNSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb241LmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZScpO1xuICAgIGljb241LnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3RyYXNoLnBuZycpO1xuICAgIHJpZ2h0LmFwcGVuZENoaWxkKGljb241KTtcblxuICAgIHJldHVybiBhTGlzdDtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlRXhpc3RpbmdNYXJrZXIoY29udGFpbmVyKSB7XG4gICAgaWYgKGxpc3RzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGNvbnN0IGZpcnN0TGlzdCA9IGNvbnRhaW5lci5maXJzdEVsZW1lbnRDaGlsZDtcbiAgICBpZiAoZmlyc3RMaXN0LmdldEF0dHJpYnV0ZSgnaWQnKSA9PT0gJ2FjdGl2ZS1saXN0Jykge1xuICAgICAgICBmaXJzdExpc3QucmVtb3ZlQXR0cmlidXRlKCdpZCcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IG5leHRMaXN0ID0gZmlyc3RMaXN0Lm5leHRFbGVtZW50U2libGluZztcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGlmIChuZXh0TGlzdC5nZXRBdHRyaWJ1dGUoJ2lkJykgPT09ICdhY3RpdmUtbGlzdCcpe1xuICAgICAgICAgICAgICAgIG5leHRMaXN0LnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHRMaXN0ID0gbmV4dExpc3QubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVBcnJheUFuZFRvZG8oYWxsVG9kb3MpIHtcbiAgICBsZXQgYWxsVG9kb0luZGV4ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxpc3RzW2ldLnNldExpc3ROdW1iZXIgPSBpO1xuICAgICAgICBpZiAobGlzdHNbaV0uZ2V0VG9kb3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCB0b2RvX25vID0gMDtcbiAgICAgICAgICAgIGNvbnN0IGxpc3Rfbm8gPSBsaXN0c1tpXS5nZXRMaXN0TnVtYmVyO1xuICAgICAgICAgICAgZm9yIChsZXQgeCBvZiBsaXN0c1tpXS5nZXRUb2Rvcykge1xuICAgICAgICAgICAgICAgIHguc2V0TGlzdE51bWJlciA9IGk7XG4gICAgICAgICAgICAgICAgeC5zZXRUb2RvTnVtYmVyID0gdG9kb19ubztcbiAgICAgICAgICAgICAgICBsZXQgdGhlRE9NID0gYWxsVG9kb3NbYWxsVG9kb0luZGV4XTtcbiAgICAgICAgICAgICAgICB0aGVET00ucmVtb3ZlQXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICAgICAgICAgIHRoZURPTS5zZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJywgYCR7bGlzdF9ub31gKTtcbiAgICAgICAgICAgICAgICB0aGVET00ucmVtb3ZlQXR0cmlidXRlKCd0b2RvLW51bWJlcicpO1xuICAgICAgICAgICAgICAgIHRoZURPTS5zZXRBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJywgYCR7dG9kb19ub31gKTtcbiAgICAgICAgICAgICAgICB0b2RvX25vKys7XG4gICAgICAgICAgICAgICAgYWxsVG9kb0luZGV4Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVMaXN0c0FuZFRvZG9zKGNvbnRhaW5lciwgbGlzdE51bWJlciwgYWxsVG9kb3MpIHtcblxuICAgIGxpc3RzLnNwbGljZShwYXJzZUludChsaXN0TnVtYmVyKSwgMSk7XG4gICAgLy8gIHVwZGF0ZSBkb21zXG4gICAgbGV0IGluZGV4ID0gMDtcblxuICAgIGZvciAobGV0IGxpc3Qgb2YgY29udGFpbmVyKSB7XG4gICAgICAgIGxpc3QucmVtb3ZlQXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICBsaXN0LnNldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInLCBgJHtpbmRleH1gKTtcbiAgICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgQXJyYXkgYW5kIHRvZG8gRE9NJ3NcbiAgICB1cGRhdGVBcnJheUFuZFRvZG8oYWxsVG9kb3MpO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBlZGl0TGlzdChlbGVtZW50KSB7XG4gICAgY29uc3QgbGlzdFRpdGxlID0gZWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZC5sYXN0RWxlbWVudENoaWxkO1xuICAgIGxpc3RUaXRsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hpZGUnKTtcblxuICAgIC8vIGNyZWF0ZSBhbiBpbnB1dCBFbGVtZW50XG4gICAgY29uc3QgbGlzdE5hbWVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgbGlzdE5hbWVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgIGxpc3ROYW1lSW5wdXQuc2V0QXR0cmlidXRlKCdtYXhsZW5ndGgnLCAnMzAnKTtcbiAgICBsaXN0TmFtZUlucHV0LnJlcXVpcmVkID0gdHJ1ZTtcbiAgICBsaXN0TmFtZUlucHV0LnZhbHVlID0gbGlzdFRpdGxlLnRleHRDb250ZW50O1xuXG4gICAgLy8gY3JlYXRlIHRoZSBmb3JtXG4gICAgY29uc3QgbGlzdE5hbWVGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIGxpc3ROYW1lRm9ybS5zZXRBdHRyaWJ1dGUoJ2FjdGlvbicsICcjJyk7XG4gICAgbGlzdE5hbWVGb3JtLmNsYXNzTGlzdC5hZGQoJ2VkaXQtbGlzdC1mb3JtJylcblxuICAgIGVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQuYXBwZW5kQ2hpbGQobGlzdE5hbWVGb3JtKTtcbiAgICBsaXN0TmFtZUZvcm0uYXBwZW5kQ2hpbGQobGlzdE5hbWVJbnB1dCk7XG4gICAgY29uc29sZS5sb2coZWxlbWVudCk7XG5cbiAgICByZXR1cm4gbGlzdE5hbWVGb3JtO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1bmRvQ2hhbmdlKGVsZW1lbnQpIHtcbiAgICBlbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLnJlbW92ZUNoaWxkKGVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQubGFzdEVsZW1lbnRDaGlsZCk7XG4gICAgZWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZC5sYXN0RWxlbWVudENoaWxkLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbn0iLCJcblxuZXhwb3J0IGxldCB0b2RvcyA9IFtdO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBhZGROZXdUb2RvSW50ZXJmYWNlKGNvbnRhaW5lciwgdGhlVG9kbykge1xuXG4gICAgLy8gZGVzY3JpcHRpb25zIGdvZXMgaGVyZVxuXG4gICAgdG9kb3MucHVzaCh0aGVUb2RvKTtcblxuICAgIGNvbnN0IGFUb2RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYVRvZG8uY2xhc3NMaXN0LmFkZCgnYS10b2RvJyk7XG4gICAgYVRvZG8uc2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicsIGAke3RoZVRvZG8uZ2V0TGlzdE51bWJlcn1gKTtcbiAgICBhVG9kby5zZXRBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJywgYCR7dGhlVG9kby5nZXRUb2RvTnVtYmVyfWApO1xuICAgIGlmICh0aGVUb2RvLmdldFByaW9yaXR5ID09PSAnbm9uZScpIHtcbiAgICAgICAgYVRvZG8uY2xhc3NMaXN0LnRvZ2dsZSgnbm9uZScpXG4gICAgfVxuICAgIGVsc2UgaWYgKHRoZVRvZG8uZ2V0UHJpb3JpdHkgPT09ICdtZWRpdW0nKSB7XG4gICAgICAgIGFUb2RvLmNsYXNzTGlzdC50b2dnbGUoJ21lZGl1bScpXG4gICAgfVxuICAgIGVsc2UgaWYgKHRoZVRvZG8uZ2V0UHJpb3JpdHkgPT09ICdoaWdoJykge1xuICAgICAgICBhVG9kby5jbGFzc0xpc3QudG9nZ2xlKCdoaWdoJylcbiAgICB9XG4gICAgZWxzZSBpZiAodGhlVG9kby5nZXRQcmlvcml0eSA9PT0gJ25vcm1hbCcpIHtcbiAgICAgICAgYVRvZG8uY2xhc3NMaXN0LnRvZ2dsZSgnbm9ybWFsJylcbiAgICB9XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGFUb2RvKTtcblxuICAgIGNvbnN0IGFMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYUxpc3QuY2xhc3NMaXN0LmFkZCgnYS1saXN0Jyk7XG4gICAgYVRvZG8uYXBwZW5kQ2hpbGQoYUxpc3QpO1xuXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdkZXNjcmlwdGlvbicpO1xuICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdGhlVG9kby5nZXREZXNjcmlwdGlvbjtcbiAgICBhVG9kby5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XG5cbiAgICBjb25zdCBjb2xsYXBzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbGxhcHNlLmNsYXNzTGlzdC5hZGQoJ2NvbGxhcHNlJyk7XG4gICAgYVRvZG8uYXBwZW5kQ2hpbGQoY29sbGFwc2UpO1xuXG4gICAgY29uc3QgbGVmdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxlZnQuY2xhc3NMaXN0LmFkZCgnbGVmdCcpO1xuICAgIGFMaXN0LmFwcGVuZENoaWxkKGxlZnQpO1xuXG4gICAgY29uc3QgcmlnaHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByaWdodC5jbGFzc0xpc3QuYWRkKCdyaWdodCcpO1xuICAgIGFMaXN0LmFwcGVuZENoaWxkKHJpZ2h0KTtcblxuICAgIGNvbnN0IGNvbGxhcHNlSW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgY29sbGFwc2VJbWcuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvdW5mb2xkLnBuZycpO1xuICAgIGNvbGxhcHNlSW1nLnNldEF0dHJpYnV0ZSgnYWx0JywgJ2NvbGxhcHNlIGljb24nKTtcbiAgICBjb2xsYXBzZUltZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hpZGUnKTtcbiAgICBjb2xsYXBzZS5hcHBlbmRDaGlsZChjb2xsYXBzZUltZyk7XG5cbiAgICBjb25zdCBpbnB1dDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGlucHV0MS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnY2hlY2tib3gnKTtcbiAgICBpbnB1dDEuc2V0QXR0cmlidXRlKCdpZCcsICd0b2RvLWNoZWNrYm94Jyk7XG4gICAgaW5wdXQxLnNldEF0dHJpYnV0ZSgnbmFtZScsICd0b2RvLWNoZWNrYm94Jyk7XG4gICAgaWYgKHRoZVRvZG8uZ2V0SXNDb21wbGV0ZWQgPT09IDEpIHtcbiAgICAgICAgaW5wdXQxLmNoZWNrZWQgPSB0cnVlO1xuICAgIH1cbiAgICBsZWZ0LmFwcGVuZENoaWxkKGlucHV0MSk7XG5cbiAgICBjb25zdCB0aXRsZVRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0aXRsZVRvZG8udGV4dENvbnRlbnQgPSBgJHt0aGVUb2RvLmdldFRpdGxlfSAoRHVlOiAke3RoZVRvZG8uZ2V0RHVlRGF0ZX0pYDtcbiAgICBsZWZ0LmFwcGVuZENoaWxkKHRpdGxlVG9kbyk7XG5cbiAgICBjb25zdCBpY29uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGljb24yLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3BlbmNpbC5wbmcnKTtcbiAgICBpY29uMi5jbGFzc0xpc3QuYWRkKCdlZGl0Jyk7XG4gICAgcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjIpO1xuXG4gICAgLy8gY29uc3QgaWNvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAvLyBpY29uMy5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpY29ucy9hcnJvdy11cC5wbmcnKTtcbiAgICAvLyBpY29uMy5jbGFzc0xpc3QuYWRkKCd1cC1hcnJvdycpO1xuICAgIC8vIHJpZ2h0LmFwcGVuZENoaWxkKGljb24zKTtcblxuICAgIC8vIGNvbnN0IGljb240ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgLy8gaWNvbjQuc2V0QXR0cmlidXRlKCdzcmMnLCAnaWNvbnMvYXJyb3ctZG93bi5wbmcnKTtcbiAgICAvLyBpY29uNC5jbGFzc0xpc3QuYWRkKCdkb3duLWFycm93Jyk7XG4gICAgLy8gcmlnaHQuYXBwZW5kQ2hpbGQoaWNvbjQpO1xuXG4gICAgY29uc3QgaWNvbjUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBpY29uNS5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpY29ucy90cmFzaC5wbmcnKTtcbiAgICBpY29uNS5jbGFzc0xpc3QuYWRkKCdkZWxldGUnKTtcbiAgICByaWdodC5hcHBlbmRDaGlsZChpY29uNSk7XG5cbiAgICByZXR1cm4gYVRvZG87XG59XG5cblxuLy8gY2hhbmdlIHRvZG8gaGVhZGVyXG5leHBvcnQgZnVuY3Rpb24gY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCBsaXN0TnVtYmVyLCB0aXRsZSkge1xuICAgIGlmIChsaXN0TnVtYmVyID09PSBudWxsKSB7XG4gICAgICAgIHRvZG9IZWFkZXIuZmlyc3RFbGVtZW50Q2hpbGQudGV4dENvbnRlbnQgPSB0aXRsZTtcbiAgICB9XG4gICAgdG9kb0hlYWRlci5zZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJywgYCR7bGlzdE51bWJlcn1gKTtcbiAgICB0b2RvSGVhZGVyLmZpcnN0RWxlbWVudENoaWxkLnRleHRDb250ZW50ID0gdGl0bGU7XG59XG5cbi8vIHNob3cgYWxsIHRvZG9zIG9mIGEgcGFydGljdWxhciBsaXN0XG5leHBvcnQgZnVuY3Rpb24gc2hvd0xpc3RzVG9kb3MoYWxsVG9kb3MsIGxpc3ROdW1iZXIpIHtcbiAgICBpZiAoYWxsVG9kb3MgPT09IG51bGwpIHJldHVyblxuICAgIGZvciAobGV0IHRvZG8gb2YgYWxsVG9kb3MpIHtcbiAgICAgICAgaWYgKHRvZG8uZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpID09PSBsaXN0TnVtYmVyKSB7XG4gICAgICAgICAgICB0b2RvLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRvZG8uc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVJlbGF0ZWRUb2RvKGNvbnRhaW5lciwgYWxsVG9kb3MsIGxpc3ROdW1iZXIpe1xuICAgIGZvciAobGV0IHRvZG8gb2YgYWxsVG9kb3MpIHtcbiAgICAgICAgY29uc3QgbGlzdF9udW0gPSB0b2RvLmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKTtcbiAgICAgICAgaWYgKGxpc3RfbnVtID09PSBsaXN0TnVtYmVyKSB7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQodG9kbyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuZnVuY3Rpb24gc2V0UHJpb3JpdHlWYWx1ZShzZWxlY3RlZE9uZSwgcHJpb3JpdHlJbnB1dCkge1xuXG4gICAgbGV0IGlucHV0ID0gcHJpb3JpdHlJbnB1dC5maXJzdEVsZW1lbnRDaGlsZDtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBpZiAoaW5wdXQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpID09PSBzZWxlY3RlZE9uZSkge1xuICAgICAgICAgICAgaW5wdXQuc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXQgPSBpbnB1dC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBlZGl0VG9kbyhlbGVtZW50LCBlZGl0TW9kYWwsIGxpc3RzKSB7XG4gICAgbGV0IGxpc3ROdW1iZXIgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKTtcbiAgICBsZXQgdG9kb051bWJlciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0b2RvLW51bWJlcicpO1xuICAgIGxldCB0aGVUb2RvID0gbGlzdHNbcGFyc2VJbnQobGlzdE51bWJlcildLmdldFRvZG9zW3BhcnNlSW50KHRvZG9OdW1iZXIpXTtcbiAgICBsZXQgZWRpdEZvcm0gPSBlZGl0TW9kYWwuZmlyc3RFbGVtZW50Q2hpbGQubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgIGVkaXRGb3JtLmZpcnN0RWxlbWVudENoaWxkLnZhbHVlID0gdGhlVG9kby5nZXRUaXRsZTtcbiAgICBlZGl0Rm9ybS5maXJzdEVsZW1lbnRDaGlsZC5uZXh0RWxlbWVudFNpYmxpbmcubGFzdEVsZW1lbnRDaGlsZC52YWx1ZSA9IHRoZVRvZG8uZ2V0RHVlRGF0ZTtcbiAgICBjb25zdCBzZWxlY3RlZE9uZSA9IHRoZVRvZG8uZ2V0UHJpb3JpdHk7XG4gICAgbGV0IHByaW9yaXR5SW5wdXQgPSBlZGl0Rm9ybS5maXJzdEVsZW1lbnRDaGlsZC5uZXh0RWxlbWVudFNpYmxpbmcubmV4dEVsZW1lbnRTaWJsaW5nLmxhc3RFbGVtZW50Q2hpbGQ7XG4gICAgc2V0UHJpb3JpdHlWYWx1ZShzZWxlY3RlZE9uZSwgcHJpb3JpdHlJbnB1dCk7XG4gICAgcHJpb3JpdHlJbnB1dC5wYXJlbnROb2RlLm5leHRFbGVtZW50U2libGluZy52YWx1ZSA9IHRoZVRvZG8uZ2V0RGVzY3JpcHRpb247XG5cbiAgICByZXR1cm4gdGhlVG9kbztcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlVG9kb0RPTSh0aGVUb2RvLCB0b2RvRE9NKSB7XG4gICAgdG9kb0RPTS5maXJzdEVsZW1lbnRDaGlsZC5maXJzdEVsZW1lbnRDaGlsZC5sYXN0RWxlbWVudENoaWxkLnRleHRDb250ZW50ID0gYCR7dGhlVG9kby5nZXRUaXRsZX0gKER1ZTogJHt0aGVUb2RvLmdldER1ZURhdGV9KWA7XG4gICAgdG9kb0RPTS5maXJzdEVsZW1lbnRDaGlsZC5uZXh0RWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQgPSBgJHt0aGVUb2RvLmdldERlc2NyaXB0aW9ufWBcbiAgICB0b2RvRE9NLmNsYXNzTGlzdC50b2dnbGUodGhlVG9kby5nZXRQcmlvcml0eSk7XG59IiwiaW1wb3J0IExpc3QgZnJvbSAnLi9saXN0J1xuaW1wb3J0IFRvZG8gZnJvbSAnLi90b2RvJ1xuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVUb2RvKGFuQXJyYXksIGwpIHtcbiAgICBsZXQgdCA9IDA7XG4gICAgZm9yIChsZXQgdG9kbyBvZiBhbkFycmF5KSB7XG4gICAgICAgIGxldCB0aXRsZSA9IHRvZG8uZ2V0VGl0bGU7XG4gICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IHRvZG8uZ2V0RGVzY3JpcHRpb247XG4gICAgICAgIGxldCBkdWVEYXRlID0gdG9kby5kdWVEYXRlO1xuICAgICAgICBsZXQgcHJpb3JpdHkgPSB0b2RvLmdldFByaW9yaXR5O1xuICAgICAgICBsZXQgbGlzdE51bWJlciA9IHRvZG8uZ2V0TGlzdE51bWJlcjtcbiAgICAgICAgbGV0IGNvbXBsZXRlZCA9IHRvZG8uZ2V0SXNDb21wbGV0ZWQ7XG4gICAgICAgIGxldCB0b2RvTnVtYmVyID0gdG9kby5nZXRUb2RvTnVtYmVyO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgbGlzdF8ke2x9X3RvZG9fJHt0fWAsIGAke3RpdGxlfSwke2Rlc2NyaXB0aW9ufSwke2R1ZURhdGV9LCR7cHJpb3JpdHl9LCR7bGlzdE51bWJlcn0sJHtjb21wbGV0ZWR9LCR7dG9kb051bWJlcn1gKTtcbiAgICAgICAgdCsrO1xuICAgIH1cbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpIHtcbiAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKVxuICAgIGxldCBsID0gMDtcblxuICAgIC8vIHNhdmUgbGlzdHNcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWN0aXZlTGlzdE51bWJlcicsIGFjdGl2ZUxpc3ROdW1iZXIpO1xuICAgIGZvciAobGV0IGVsZW0gb2YgbGlzdHMpIHtcbiAgICAgICAgbGV0IGxpc3RUaXRsZSA9IGVsZW0uZ2V0VGl0bGU7XG4gICAgICAgIGxldCBsaXN0TnVtYmVyID0gZWxlbS5nZXRMaXN0TnVtYmVyO1xuICAgICAgICBpZiAoZWxlbS5nZXRJc0RlZmF1bHQgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgbGlzdF8ke2x9YCwgYCR7bGlzdFRpdGxlfSwke2xpc3ROdW1iZXJ9LDFgKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGBsaXN0XyR7bH1gLCBgJHtsaXN0VGl0bGV9LCR7bGlzdE51bWJlcn1gKTtcbiAgICAgICAgfVxuICAgICAgICBzYXZlVG9kbyhlbGVtLmdldFRvZG9zLCBsKTtcbiAgICAgICAgbCsrO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiBzb3J0QXJyYXlzKGFycmF5TGlzdHMpIHtcbiAgICBjb25zdCBuZXdMaXN0cyA9IGFycmF5TGlzdHMuc29ydCgoYSxiKSA9PiB7XG4gICAgICAgIGlmIChhLmdldExpc3ROdW1iZXIgPiBiLmdldExpc3ROdW1iZXIpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiBuZXdMaXN0cztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0VG9kb3NUb0xpc3RzKGZpbmFsQXJyYXksIGFycmF5VG9kb3MpIHtcbiAgICBmb3IgKGxldCB0b2RvIG9mIGFycmF5VG9kb3MpIHtcbiAgICAgICAgZmluYWxBcnJheVt0b2RvLmdldExpc3ROdW1iZXJdLmdldFRvZG9zLnB1c2godG9kbyk7XG4gICAgfVxuICAgIC8vIHNvcnQgdGhlIHRvZG9zXG4gICAgZm9yIChsZXQgbGlzdCBvZiBmaW5hbEFycmF5KSB7XG4gICAgICAgIGNvbnN0IG5ld1RvZG8gPSBsaXN0LmdldFRvZG9zLnNvcnQoKGEsYikgPT4ge1xuICAgICAgICAgICAgaWYgKGEuZ2V0VG9kb051bWJlciA+IGIuZ2V0VG9kb051bWJlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICBsaXN0LnNldFRvZG9zID0gbmV3VG9kbztcbiAgICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWREYXRhKCkge1xuICAgIGxldCBhcnJheUxpc3RzID0gW107XG4gICAgbGV0IGFycmF5VG9kb3MgPSBbXTtcbiAgICBmb3IgKGxldCBlbGVtIGluIGxvY2FsU3RvcmFnZSkge1xuICAgICAgICBpZiAoZWxlbS5pbmNsdWRlcygnbGlzdCcpICYmICFlbGVtLmluY2x1ZGVzKCd0b2RvJykpIHtcbiAgICAgICAgICAgIGNvbnN0IGxpc3REZXRhaWxzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oZWxlbSkuc3BsaXQoJywnKTtcbiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gbGlzdERldGFpbHNbMF07XG4gICAgICAgICAgICBjb25zdCBsaXN0TnVtYmVyID0gcGFyc2VJbnQobGlzdERldGFpbHNbMV0pO1xuICAgICAgICAgICAgaWYgKGxpc3REZXRhaWxzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0xpc3QgPSBuZXcgTGlzdCh0aXRsZSwgW10sIGxpc3ROdW1iZXIsIDEpO1xuICAgICAgICAgICAgICAgIGFycmF5TGlzdHMucHVzaChuZXdMaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0xpc3QgPSBuZXcgTGlzdCh0aXRsZSwgW10sIGxpc3ROdW1iZXIpO1xuICAgICAgICAgICAgICAgIGFycmF5TGlzdHMucHVzaChuZXdMaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlbGVtLmluY2x1ZGVzKCd0b2RvJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHRvZG9EZXRhaWxzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oZWxlbSkuc3BsaXQoJywnKTtcbiAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdG9kb0RldGFpbHNbMF07XG4gICAgICAgICAgICBjb25zdCBkZXNjcmlwdGlvbiA9IHRvZG9EZXRhaWxzWzFdO1xuICAgICAgICAgICAgY29uc3QgZHVlRGF0ZSA9IHRvZG9EZXRhaWxzWzJdO1xuICAgICAgICAgICAgY29uc3QgcHJpb3JpdHkgPSB0b2RvRGV0YWlsc1szXTtcbiAgICAgICAgICAgIGNvbnN0IGxpc3ROdW1iZXIgPSBwYXJzZUludCh0b2RvRGV0YWlsc1s0XSk7XG4gICAgICAgICAgICBjb25zdCBjb21wbGV0ZWQgPSBwYXJzZUludCh0b2RvRGV0YWlsc1s1XSk7XG4gICAgICAgICAgICBjb25zdCB0b2RvTnVtYmVyID0gcGFyc2VJbnQodG9kb0RldGFpbHNbNl0pO1xuICAgICAgICAgICAgY29uc3QgbmV3VG9kbyA9IG5ldyBUb2RvKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIGxpc3ROdW1iZXIsIGNvbXBsZXRlZCwgdG9kb051bWJlcik7XG4gICAgICAgICAgICBhcnJheVRvZG9zLnB1c2gobmV3VG9kbyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IGZpbmFsQXJyYXkgPSBzb3J0QXJyYXlzKGFycmF5TGlzdHMpO1xuICAgIGluc2VydFRvZG9zVG9MaXN0cyhmaW5hbEFycmF5LCBhcnJheVRvZG9zKTtcbiAgICByZXR1cm4gZmluYWxBcnJheTtcbiAgICBjb25zb2xlLmxvZygncHJpbnRpbmcgdGhlIGNvbnZlcnRlZCBhcnJheScpXG4gICAgY29uc29sZS5sb2coZmluYWxBcnJheSk7XG59IiwiaW1wb3J0IExpc3QgZnJvbSAnLi9saXN0J1xuaW1wb3J0IFRvZG8gZnJvbSAnLi90b2RvJ1xuaW1wb3J0IHtsaXN0cywgYWRkTmV3TGlzdEludGVyZmFjZSwgcmVtb3ZlRXhpc3RpbmdNYXJrZXIsIHVwZGF0ZUxpc3RzQW5kVG9kb3MsIHVwZGF0ZUFycmF5QW5kVG9kbywgZWRpdExpc3QsIHVuZG9DaGFuZ2V9IGZyb20gJy4vbWFuYWdlTGlzdEludGVyZmFjZSdcbmltcG9ydCB7YWRkTmV3VG9kb0ludGVyZmFjZSwgY2hhbmdlVG9kb0hlYWRlciwgc2hvd0xpc3RzVG9kb3MsIGRlbGV0ZVJlbGF0ZWRUb2RvLCBlZGl0VG9kbywgdXBkYXRlVG9kb0RPTX0gZnJvbSAnLi9tYW5hZ2VUb2RvSW50ZXJmYWNlJ1xuaW1wb3J0IHtzYXZlRGF0YSwgbG9hZERhdGF9IGZyb20gJy4vc3RvcmFnZU1hbmFnZW1lbnQnXG5cbmxldCBhY3RpdmVMaXN0TnVtYmVyID0gJzAnO1xuXG5cbmZ1bmN0aW9uIGFkZExpc3QoZSkge1xuICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0KTtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAvLyBtYW5hZ2UgQXJyYXkgb2YgbGlzdHNcbiAgICBsZXQgbmV3TGlzdCA9IG5ldyBMaXN0KG5ld0xpc3RpbnB1dC52YWx1ZSwgW10sIGxpc3RzLmxlbmd0aCk7XG4gICAgcmVtb3ZlRXhpc3RpbmdNYXJrZXIoYWxsTGlzdCk7XG4gICAgY29uc3QgbmV3TGlzdERPTSA9IGFkZE5ld0xpc3RJbnRlcmZhY2UobmV3TGlzdCwgYWxsTGlzdCwgbmV3TGlzdE1vZGFsKTtcbiAgICBuZXdMaXN0RE9NLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICBjb25zdCBhbGxUb2RvcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmEtdG9kbycpKTtcblxuICAgIC8vIG1hbmFnZSB0b2RvIGludGVyZmFjZVxuICAgIGNoYW5nZVRvZG9IZWFkZXIodG9kb0hlYWRlciwgbmV3TGlzdC5nZXRMaXN0TnVtYmVyLCBuZXdMaXN0LmdldFRpdGxlKTtcbiAgICBzaG93TGlzdHNUb2RvcyhhbGxUb2RvcywgbmV3TGlzdC5nZXRMaXN0TnVtYmVyLnRvU3RyaW5nKCkpO1xuICAgIGFjdGl2ZUxpc3ROdW1iZXIgPSBuZXdMaXN0LmdldExpc3ROdW1iZXIudG9TdHJpbmcoKTtcbiAgICBuZXdMaXN0RE9NLm9uY2xpY2sgPSBtYWtlTGlzdEFjdGl2ZTtcbiAgICBlLnRhcmdldC5yZXNldCgpO1xuICAgIG5ld0xpc3RNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hpZGUnKTtcbiAgICBhbGxMaXN0LnNjcm9sbFRvKDAsIGFsbExpc3Quc2Nyb2xsSGVpZ2h0KTtcbiAgICBjb25zb2xlLmxvZyhsaXN0cyk7XG4gICAgc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpO1xufVxuXG5cbmZ1bmN0aW9uIGFkZF9hX1RvZG8oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIC8vIG1hbmFnZSBBcnJheSBvZiBsaXN0c1xuICAgIGNvbnN0IGxpc3ROdW1iZXIgPSBwYXJzZUludCh0b2RvSGVhZGVyLmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKSk7XG4gICAgY29uc3QgdG9kb051bWJlciA9IGxpc3RzW3BhcnNlSW50KGxpc3ROdW1iZXIpXS5nZXRUb2Rvcy5sZW5ndGg7XG4gICAgbGV0IG5ld1RvZG8gPSBuZXcgVG9kbyh0b2RvTmFtZS52YWx1ZSwgZGVzY3JpcHRpb24udmFsdWUsIGR1ZURhdGUudmFsdWUsIHByaW9yaXR5LnZhbHVlLCBsaXN0TnVtYmVyLCAwLCB0b2RvTnVtYmVyKTtcbiAgICBsaXN0c1twYXJzZUludChsaXN0TnVtYmVyKV0uZ2V0VG9kb3MucHVzaChuZXdUb2RvKTtcblxuXG4gICAgLy8gYnJpbmcgdGhlIHRvZG8gaW50ZXJmYWNlXG4gICAgY29uc3QgbmV3VG9kb0RPTSA9IGFkZE5ld1RvZG9JbnRlcmZhY2UoYWxsVG9kbywgbmV3VG9kbyk7XG4gICAgbmV3VG9kb0RPTS5vbmNsaWNrID0gbW9kaWZ5VG9kbztcblxuICAgIC8vIGhpZGUgbW9kYWxcbiAgICBuZXdUb2RvTW9kYWwuc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG4gICAgYWxsVG9kby5zY3JvbGxUbygwLCBhbGxUb2RvLnNjcm9sbEhlaWdodCk7XG4gICAgZS50YXJnZXQucmVzZXQoKTtcbiAgICBjb25zb2xlLnRhYmxlKGxpc3RzKTtcbiAgICBzYXZlRGF0YShsaXN0cywgYWN0aXZlTGlzdE51bWJlcik7XG59XG5cblxuZnVuY3Rpb24gc2F2ZUVkaXRlZExpc3QoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zb2xlLmxvZyhhY3RpdmVMaXN0TnVtYmVyKTtcbiAgICBsZXQgdGhlTGlzdCA9IGxpc3RzW3BhcnNlSW50KGFjdGl2ZUxpc3ROdW1iZXIpXTtcbiAgICB0aGVMaXN0LnNldFRpdGxlID0gZS50YXJnZXQuZmlyc3RFbGVtZW50Q2hpbGQudmFsdWU7XG4gICAgZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZy50ZXh0Q29udGVudCA9IGUudGFyZ2V0LmZpcnN0RWxlbWVudENoaWxkLnZhbHVlO1xuICAgIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZSk7XG4gICAgbGV0IGxpc3ROdW1iZXIgPSBhY3RpdmVMaXN0TnVtYmVyO1xuICAgIGNoYW5nZVRvZG9IZWFkZXIodG9kb0hlYWRlciwgbGlzdE51bWJlciwgZS50YXJnZXQuZmlyc3RFbGVtZW50Q2hpbGQudmFsdWUpO1xuICAgIHVuZG9DaGFuZ2UoZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlKTtcbiAgICBzYXZlRGF0YShsaXN0cywgYWN0aXZlTGlzdE51bWJlcik7XG59XG5cblxuZnVuY3Rpb24gbWFrZUxpc3RBY3RpdmUoZSkge1xuICAgIC8vIGhhbmRsZSBkZWxldGUsIHVwLCBkb3duLCBjb21wbGV0ZVxuICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QudmFsdWUgPT09ICdkZWxldGUnKSB7XG4gICAgICAgIGRlbGV0ZUVsZW1lbnQodGhpcyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC52YWx1ZSA9PT0gJ2VkaXQnKSB7XG4gICAgICAgIGNvbnN0IGxpc3ROYW1lRm9ybSA9IGVkaXRMaXN0KHRoaXMpO1xuICAgICAgICBsaXN0TmFtZUZvcm0ub25zdWJtaXQgPSBzYXZlRWRpdGVkTGlzdDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlbW92ZUV4aXN0aW5nTWFya2VyKGFsbExpc3QpO1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICAgICAgXG4gICAgICAgIC8vIGdldCB0aGUgbGlzdE9iamVjdFxuICAgICAgICBsZXQgbGlzdE51bWJlciA9IHRoaXMuZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIGxpc3ROdW1iZXIsIHRoaXMuZmlyc3RFbGVtZW50Q2hpbGQubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCk7XG4gICAgICAgIGNvbnN0IGFsbFRvZG9zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYS10b2RvJykpO1xuICAgICAgICBzaG93TGlzdHNUb2RvcyhhbGxUb2RvcywgbGlzdE51bWJlcik7XG4gICAgICAgIGFjdGl2ZUxpc3ROdW1iZXIgPSBsaXN0TnVtYmVyO1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWN0aXZlTGlzdE51bWJlcicpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWN0aXZlTGlzdE51bWJlcicsIGFjdGl2ZUxpc3ROdW1iZXIpO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGxpc3RzKTtcbn1cblxuXG5mdW5jdGlvbiBzaG93UmVsYXRlZFRvZG9zKHgsIGxpc3RObyl7XG4gICAgaWYgKGxpc3RzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIG51bGwsICdBZGQgYSBMaXN0Jyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGxpc3RObyA9PT0gYDBgKSB7XG4gICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsLWxpc3QgZGl2W2xpc3QtbnVtYmVyPVwiMFwiXScpO1xuICAgICAgICBhY3RpdmVMaXN0LnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICAgICAgY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCBsaXN0Tm8sIGxpc3RzWzBdLmdldFRpdGxlKTtcbiAgICAgICAgc2hvd0xpc3RzVG9kb3MoeCwgYDBgKTtcbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9ICcwJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuYWxsLWxpc3QgZGl2W2xpc3QtbnVtYmVyPVwiJHtwYXJzZUludChsaXN0Tm8pLTF9XCJdYCk7XG4gICAgICAgIGFjdGl2ZUxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdhY3RpdmUtbGlzdCcpO1xuICAgICAgICBjaGFuZ2VUb2RvSGVhZGVyKHRvZG9IZWFkZXIsIGxpc3RObywgbGlzdHNbcGFyc2VJbnQobGlzdE5vKS0xXS5nZXRUaXRsZSk7XG4gICAgICAgIHNob3dMaXN0c1RvZG9zKHgsIGAke3BhcnNlSW50KGxpc3RObyktMX1gKTtcbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9IGAke3BhcnNlSW50KGxpc3RObyktMX1gO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiBkZWxldGVFbGVtZW50KGVsZW1lbnQpIHtcbiAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QudmFsdWUgPT09ICdhLWxpc3QnKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJyk7XG4gICAgICAgIC8vIHJlbW92ZUV4aXN0aW5nTWFya2VyKGFsbExpc3QpO1xuICAgICAgICBhbGxMaXN0LnJlbW92ZUNoaWxkKGVsZW1lbnQpXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmEtbGlzdCcpKTtcbiAgICAgICAgbGV0IHggPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGwtdG9kbyAuYS10b2RvJykpO1xuICAgICAgICBkZWxldGVSZWxhdGVkVG9kbyhhbGxUb2RvLCB4LCBpbmRleCk7XG4gICAgICAgIHggPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGwtdG9kbyAuYS10b2RvJykpO1xuICAgICAgICB1cGRhdGVMaXN0c0FuZFRvZG9zKGNvbnRhaW5lciwgaW5kZXgsIHgpO1xuICAgICAgICBpZiAoaW5kZXggPT09IGFjdGl2ZUxpc3ROdW1iZXIpIHtcbiAgICAgICAgICAgIHNob3dSZWxhdGVkVG9kb3MoeCwgaW5kZXgpO31cbiAgICAgICAgYWN0aXZlTGlzdE51bWJlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhY3RpdmUtbGlzdCcpLmdldEF0dHJpYnV0ZSgnbGlzdC1udW1iZXInKTtcbiAgICAgICAgY29uc29sZS5sb2coYWN0aXZlTGlzdE51bWJlcik7XG4gICAgfVxuICAgIHNhdmVEYXRhKGxpc3RzLCBhY3RpdmVMaXN0TnVtYmVyKTtcbn1cblxuZnVuY3Rpb24gY2hhbmdlQ2hlY2soZWxlbWVudCkge1xuICAgIGlmIChlbGVtZW50LmNoZWNrZWQgPT09IHRydWUpIHtcbiAgICAgICAgZWxlbWVudC5jaGVja2VkID0gZmFsc2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBlbGVtZW50LmNoZWNrZWQgPSB0cnVlO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiB1cGRhdGVEYXRhcyh0aGVUb2RvLCBlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHRvZG9ET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuYWxsLXRvZG8gZGl2W3RvZG8tbnVtYmVyPVwiJHt0aGVUb2RvLmdldFRvZG9OdW1iZXJ9XCJdYCk7XG4gICAgdG9kb0RPTS5jbGFzc0xpc3QucmVtb3ZlKHRoZVRvZG8uZ2V0UHJpb3JpdHkpO1xuICAgIHRoZVRvZG8uc2V0VGl0bGUgPSBlLnRhcmdldC5maXJzdEVsZW1lbnRDaGlsZC52YWx1ZTtcbiAgICB0aGVUb2RvLnNldER1ZURhdGUgPSBlLnRhcmdldC5maXJzdEVsZW1lbnRDaGlsZC5uZXh0RWxlbWVudFNpYmxpbmcubGFzdEVsZW1lbnRDaGlsZC52YWx1ZTtcbiAgICB0aGVUb2RvLnNldFByaW9yaXR5ID0gZS50YXJnZXQuZmlyc3RFbGVtZW50Q2hpbGQubmV4dEVsZW1lbnRTaWJsaW5nLm5leHRFbGVtZW50U2libGluZy5sYXN0RWxlbWVudENoaWxkLnZhbHVlO1xuICAgIHRoZVRvZG8uc2V0RGVzY3JpcHRpb24gPSBlLnRhcmdldC5sYXN0RWxlbWVudENoaWxkLnByZXZpb3VzRWxlbWVudFNpYmxpbmcudmFsdWU7XG4gICAgZS50YXJnZXQucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hpZGUnKTtcbiAgICB1cGRhdGVUb2RvRE9NKHRoZVRvZG8sIHRvZG9ET00pO1xuICAgIHNhdmVEYXRhKGxpc3RzLCBhY3RpdmVMaXN0TnVtYmVyKTtcbn1cblxuXG5mdW5jdGlvbiBtb2RpZnlUb2RvKGUpIHtcbiAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LnZhbHVlID09PSAnZGVsZXRlJykge1xuICAgICAgICBjb25zdCBsaXN0TnVtYmVyID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2xpc3QtbnVtYmVyJyk7XG4gICAgICAgIGNvbnN0IHRvZG9OdW1iZXIgPSB0aGlzLmdldEF0dHJpYnV0ZSgndG9kby1udW1iZXInKTtcblxuICAgICAgICAvLyBkZWxldGUgdG9kbyBmcm9tIHRoZSBsaXN0cyBBcnJheSBhbmQgdGhlIGRvbVxuICAgICAgICBsaXN0c1twYXJzZUludChsaXN0TnVtYmVyKV0uZ2V0VG9kb3Muc3BsaWNlKHBhcnNlSW50KHRvZG9OdW1iZXIpLCAxKTtcbiAgICAgICAgY29uc29sZS50YWJsZShsaXN0cyk7XG4gICAgICAgIGFsbFRvZG8ucmVtb3ZlQ2hpbGQodGhpcyk7XG5cbiAgICAgICAgLy8gdXBkYXRlIHRvZG8gYXJyYXlcbiAgICAgICAgY29uc3QgYWxsVG9kb3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hbGwtdG9kbyAuYS10b2RvJykpO1xuICAgICAgICB1cGRhdGVBcnJheUFuZFRvZG8oYWxsVG9kb3MpO1xuICAgIH1cbiAgICBlbHNlIGlmIChlLnRhcmdldC5jbGFzc0xpc3QudmFsdWUgPT09ICdlZGl0Jykge1xuICAgICAgICBjb25zdCBlZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZWRpdC10b2RvLW1vZGFsJyk7XG4gICAgICAgIGVkaXRNb2RhbC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgIGNvbnN0IHRoZVRvZG8gPSBlZGl0VG9kbyh0aGlzLCBlZGl0TW9kYWwsIGxpc3RzKTtcbiAgICAgICAgY29uc3QgZWRpdEZvcm0gPSBlZGl0TW9kYWwubGFzdEVsZW1lbnRDaGlsZDtcbiAgICAgICAgZWRpdEZvcm0ub25zdWJtaXQgPSAoZSkgPT4ge1xuICAgICAgICAgICAgdXBkYXRlRGF0YXModGhlVG9kbywgZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWRpdEZvcm0ub25yZXNldCA9ICgpID0+IHtcbiAgICAgICAgICAgIGVkaXRNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hpZGUnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgndHlwZScpID09PSAnY2hlY2tib3gnKSB7XG4gICAgICAgICAgICBjaGFuZ2VDaGVjayhlLnRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGlzdE51bWJlciA9IHRoaXMuZ2V0QXR0cmlidXRlKCdsaXN0LW51bWJlcicpO1xuICAgICAgICBjb25zdCB0b2RvTnVtYmVyID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3RvZG8tbnVtYmVyJyk7XG4gICAgICAgIGxldCB0aGVMaXN0ID0gbGlzdHNbcGFyc2VJbnQobGlzdE51bWJlcildO1xuICAgICAgICBsZXQgdGhlVG9kbyA9IHRoZUxpc3QuZ2V0VG9kb3NbcGFyc2VJbnQodG9kb051bWJlcildO1xuICAgICAgICB0aGVUb2RvLmNoYW5nZUNvbXBsZXRlU3RhdHVzKCk7XG4gICAgICAgIGNoYW5nZUNoZWNrKHRoaXMuZmlyc3RFbGVtZW50Q2hpbGQuZmlyc3RFbGVtZW50Q2hpbGQuZmlyc3RFbGVtZW50Q2hpbGQpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkKTtcbiAgICB9XG4gICAgc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpO1xufVxuXG5cbmZ1bmN0aW9uIGxvYWRQYWdlKGFuQXJyYXkpIHtcbiAgICBpZiAoYW5BcnJheS5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBmb3IgKGxldCBsaXN0IG9mIGFuQXJyYXkpIHtcbiAgICAgICAgYWRkTmV3TGlzdEludGVyZmFjZShsaXN0LCBhbGxMaXN0LCBuZXdMaXN0TW9kYWwpO1xuICAgICAgICBmb3IgKGxldCB0b2RvIG9mIGxpc3QuZ2V0VG9kb3MpIHtcbiAgICAgICAgICAgIGFkZE5ld1RvZG9JbnRlcmZhY2UoYWxsVG9kbywgdG9kbyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgYWN0aXZlTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5hbGwtbGlzdCBkaXZbbGlzdC1udW1iZXI9XCIke2FjdGl2ZUxpc3ROdW1iZXJ9XCJdYCk7XG4gICAgLy8gcmVtb3ZlRXhpc3RpbmdNYXJrZXIoYWxsTGlzdCk7XG4gICAgaWYgKGFjdGl2ZUxpc3QgIT09IG51bGwpIHtcbiAgICAgICAgYWN0aXZlTGlzdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FjdGl2ZS1saXN0Jyk7XG4gICAgfVxuICAgIGNvbnN0IGFsbFRvZG9zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYS10b2RvJykpO1xuICAgIGNoYW5nZVRvZG9IZWFkZXIodG9kb0hlYWRlciwgYWN0aXZlTGlzdE51bWJlciwgbGlzdHNbcGFyc2VJbnQoYWN0aXZlTGlzdE51bWJlcildLmdldFRpdGxlKTtcbiAgICBzaG93TGlzdHNUb2RvcyhhbGxUb2RvcywgYWN0aXZlTGlzdE51bWJlcik7XG4gICAgY29uc29sZS5sb2cobGlzdHMpO1xufVxuXG5cbi8vICMjIyMjIyMjIyMjIyMjIE1BSU4gRlVOQ1RJT04gIyMjIyMjIyMjIyMjIyMjIyNcblxuXG4vLyBBbGwgZ2xvYmFsIHZhcmlhYmxlcyBhbmQgZXZlbnRMaXN0ZW5lcnNcbmNvbnN0IGFsbExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsLWxpc3QnKTtcbmNvbnN0IG5ld0xpc3RpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsaXN0LW5hbWUnKTtcbmNvbnN0IGxpc3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QtZm9ybScpO1xuY29uc3QgYWRkTmV3TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtbmV3LWxpc3QnKTtcbmNvbnN0IG5ld0xpc3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXctbGlzdC1tb2RhbCcpO1xuY29uc3QgYWRkVG9kbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtdG9kbycpO1xuY29uc3QgbmV3VG9kb01vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ldy10b2RvLW1vZGFsJyk7XG5jb25zdCB0b2RvRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWZvcm0nKTtcbmNvbnN0IHRvZG9OYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvZG8tbmFtZScpO1xuY29uc3QgZHVlRGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkdWUtZGF0ZScpO1xuY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJpb3JpdHknKTtcbmNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Rlc2NyaXB0aW9uJyk7XG5jb25zdCBhbGxUb2RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFsbC10b2RvJyk7XG5jb25zdCB0b2RvSGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG8taGVhZGVyJyk7XG5cblxuXG4vLyBsb2FkaW5nIHRoZSBleGlzdGluZyBkYXRhXG5pZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjdGl2ZUxpc3ROdW1iZXInKSkge1xuICAgIGxldCBhbkFycmF5ID0gbG9hZERhdGEoKTtcbiAgICBhY3RpdmVMaXN0TnVtYmVyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjdGl2ZUxpc3ROdW1iZXInKTtcbiAgICBsb2FkUGFnZShhbkFycmF5KTtcbiAgICAvLyBsb2FkUGFnZShhbkFycmF5KTtcbn1cbmVsc2Uge1xuICAgIC8vIEFkZGluZyBkZWZhdWx0IGxpc3RcbiAgICBsZXQgZGVmYXVsdExpc3QgPSBuZXcgTGlzdCgnTXkgRGF5JywgW10sIDAsIDEpO1xuICAgIGFkZE5ld0xpc3RJbnRlcmZhY2UoZGVmYXVsdExpc3QsIGFsbExpc3QsIG5ld0xpc3RNb2RhbCk7XG4gICAgY2hhbmdlVG9kb0hlYWRlcih0b2RvSGVhZGVyLCAnMCcsICdNeSBEYXknKTtcbiAgICBjb25zdCBhY3RpdmVMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmFsbC1saXN0IGRpdltsaXN0LW51bWJlcj1cIiR7ZGVmYXVsdExpc3QuZ2V0TGlzdE51bWJlcn1cIl1gKTtcbiAgICBhY3RpdmVMaXN0LnNldEF0dHJpYnV0ZSgnaWQnLCAnYWN0aXZlLWxpc3QnKTtcbiAgICAvLyBhY3RpdmVMaXN0LmNsYXNzTGlzdC50b2dnbGUoJ2RlZmF1bHQtbGlzdCcpO1xuICAgIC8vIGFjdGl2ZUxpc3QucmVtb3ZlQXR0cmlidXRlKCdzcmMnKTtcbiAgICAvLyBhY3RpdmVMaXN0LnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ljb25zL3dlYXRoZXItc3VubnkucG5nJyk7XG4gICAgc2F2ZURhdGEobGlzdHMsIGFjdGl2ZUxpc3ROdW1iZXIpO1xufVxuXG5cbmNvbnN0IGRlZmF1bHRMaXN0RE9NID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFsbC1saXN0IC5hLWxpc3QnKTtcbmNvbnN0IGFsbFRvZG9ET01TID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFsbC10b2RvIC5hLXRvZG8nKTtcblxuYWRkVG9kby5vbmNsaWNrID0gKCkgPT4ge1xuICAgIG5ld1RvZG9Nb2RhbC5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG59XG5cbmFkZE5ld0xpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgbmV3TGlzdE1vZGFsLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICBhbGxMaXN0LnNjcm9sbFRvKDAsIGFsbExpc3Quc2Nyb2xsSGVpZ2h0KTtcbn0pXG5cblxubGlzdEZvcm0ub25zdWJtaXQgPSBhZGRMaXN0O1xubGlzdEZvcm0ub25yZXNldCA9ICgpID0+IHtcbiAgICBuZXdMaXN0TW9kYWwuc2V0QXR0cmlidXRlKCdpZCcsICdoaWRlJyk7XG59XG5cbnRvZG9Gb3JtLm9uc3VibWl0ID0gYWRkX2FfVG9kbztcbnRvZG9Gb3JtLm9ucmVzZXQgPSAoKSA9PiB7XG4gICAgbmV3VG9kb01vZGFsLnNldEF0dHJpYnV0ZSgnaWQnLCAnaGlkZScpO1xufVxuXG5kZWZhdWx0TGlzdERPTS5mb3JFYWNoKGxpc3QgPT4ge1xuICAgIGxpc3Qub25jbGljayA9IG1ha2VMaXN0QWN0aXZlO1xufSk7XG5cbmFsbFRvZG9ET01TLmZvckVhY2godG9kbyA9PiB7XG4gICAgdG9kby5vbmNsaWNrID0gbW9kaWZ5VG9kbztcbn0pOyJdLCJuYW1lcyI6WyJMaXN0IiwiY29uc3RydWN0b3IiLCJ0aXRsZSIsInRvZG9zIiwibGlzdE51bWJlciIsImlzRGVmYXVsdCIsInRoaXMiLCJnZXRJc0RlZmF1bHQiLCJzZXRJc0RlZmF1bHQiLCJ2YWx1ZSIsImdldExpc3ROdW1iZXIiLCJzZXRMaXN0TnVtYmVyIiwiZ2V0VGl0bGUiLCJnZXRUb2RvcyIsInNldFRvZG9zIiwic2V0VGl0bGUiLCJhZGROZXdMaXN0IiwidGhlVG9kbyIsInB1c2giLCJUb2RvIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJjb21wbGV0ZWQiLCJ0b2RvTnVtYmVyIiwiZ2V0VG9kb051bWJlciIsInNldFRvZG9OdW1iZXIiLCJnZXRJc0NvbXBsZXRlZCIsImNoYW5nZUNvbXBsZXRlU3RhdHVzIiwiZ2V0RGVzY3JpcHRpb24iLCJnZXREdWVEYXRlIiwiZ2V0UHJpb3JpdHkiLCJzZXREZXNjcmlwdGlvbiIsInNldER1ZURhdGUiLCJzZXRQcmlvcml0eSIsImxpc3RzIiwiYWRkTmV3TGlzdEludGVyZmFjZSIsImxpc3RPYmplY3QiLCJjb250YWluZXIiLCJpbnNlcnRfYmVmb3JlIiwiYUxpc3QiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRCZWZvcmUiLCJsZWZ0IiwiYXBwZW5kQ2hpbGQiLCJyaWdodCIsImljb24xIiwibGlzdFRpdGxlIiwidGV4dENvbnRlbnQiLCJpY29uMiIsImljb241IiwicmVtb3ZlRXhpc3RpbmdNYXJrZXIiLCJsZW5ndGgiLCJmaXJzdExpc3QiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImdldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIm5leHRMaXN0IiwibmV4dEVsZW1lbnRTaWJsaW5nIiwidXBkYXRlQXJyYXlBbmRUb2RvIiwiYWxsVG9kb3MiLCJhbGxUb2RvSW5kZXgiLCJpIiwidG9kb19ubyIsImxpc3Rfbm8iLCJ4IiwidGhlRE9NIiwiYWRkTmV3VG9kb0ludGVyZmFjZSIsImFUb2RvIiwidG9nZ2xlIiwiY29sbGFwc2UiLCJjb2xsYXBzZUltZyIsImlucHV0MSIsImNoZWNrZWQiLCJ0aXRsZVRvZG8iLCJjaGFuZ2VUb2RvSGVhZGVyIiwidG9kb0hlYWRlciIsInNob3dMaXN0c1RvZG9zIiwidG9kbyIsInNhdmVUb2RvIiwiYW5BcnJheSIsImwiLCJ0IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInNhdmVEYXRhIiwiYWN0aXZlTGlzdE51bWJlciIsImNsZWFyIiwiZWxlbSIsInNhdmVFZGl0ZWRMaXN0IiwiZSIsImVsZW1lbnQiLCJwcmV2ZW50RGVmYXVsdCIsImNvbnNvbGUiLCJsb2ciLCJwYXJzZUludCIsInRhcmdldCIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJsYXN0RWxlbWVudENoaWxkIiwibWFrZUxpc3RBY3RpdmUiLCJpbmRleCIsImFsbExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVsZXRlUmVsYXRlZFRvZG8iLCJhbGxUb2RvIiwic3BsaWNlIiwibGlzdCIsInVwZGF0ZUxpc3RzQW5kVG9kb3MiLCJsaXN0Tm8iLCJxdWVyeVNlbGVjdG9yIiwic2hvd1JlbGF0ZWRUb2RvcyIsImRlbGV0ZUVsZW1lbnQiLCJsaXN0TmFtZUlucHV0IiwicmVxdWlyZWQiLCJsaXN0TmFtZUZvcm0iLCJlZGl0TGlzdCIsIm9uc3VibWl0IiwicmVtb3ZlSXRlbSIsImNoYW5nZUNoZWNrIiwibW9kaWZ5VG9kbyIsInRhYmxlIiwiZWRpdE1vZGFsIiwiZWRpdEZvcm0iLCJzZWxlY3RlZE9uZSIsInByaW9yaXR5SW5wdXQiLCJpbnB1dCIsInNlbGVjdGVkIiwic2V0UHJpb3JpdHlWYWx1ZSIsImVkaXRUb2RvIiwidG9kb0RPTSIsInJlbW92ZSIsInVwZGF0ZVRvZG9ET00iLCJ1cGRhdGVEYXRhcyIsIm9ucmVzZXQiLCJuZXdMaXN0aW5wdXQiLCJsaXN0Rm9ybSIsIm5ld0xpc3RNb2RhbCIsImFkZFRvZG8iLCJuZXdUb2RvTW9kYWwiLCJ0b2RvRm9ybSIsInRvZG9OYW1lIiwiZ2V0SXRlbSIsImFycmF5TGlzdHMiLCJhcnJheVRvZG9zIiwiaW5jbHVkZXMiLCJsaXN0RGV0YWlscyIsInNwbGl0IiwibmV3TGlzdCIsInRvZG9EZXRhaWxzIiwibmV3VG9kbyIsImZpbmFsQXJyYXkiLCJzb3J0IiwiYSIsImIiLCJzb3J0QXJyYXlzIiwiaW5zZXJ0VG9kb3NUb0xpc3RzIiwibG9hZERhdGEiLCJhY3RpdmVMaXN0IiwibG9hZFBhZ2UiLCJkZWZhdWx0TGlzdCIsImRlZmF1bHRMaXN0RE9NIiwiYWxsVG9kb0RPTVMiLCJvbmNsaWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNjcm9sbFRvIiwic2Nyb2xsSGVpZ2h0IiwibmV3TGlzdERPTSIsInRvU3RyaW5nIiwicmVzZXQiLCJmb3JFYWNoIl0sInNvdXJjZVJvb3QiOiIifQ==