(()=>{"use strict";class t{constructor(t,e,i,s=0){this.title=t,this.todos=e,this.listNumber=i,this.isDefault=s}get getIsDefault(){return this.isDefault}set setIsDefault(t){this.isDefault=t}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,s,l,r,n){this.title=t,this.description=e,this.dueDate=i,this.priority=s,this.listNumber=l,this.completed=r,this.todoNumber=n}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function s(t,e,s){i.push(t);const l=document.createElement("div");l.classList.add("a-list"),l.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(l,s);const r=document.createElement("div");r.classList.add("left"),l.appendChild(r);const n=document.createElement("div");n.classList.add("right"),l.appendChild(n);const o=document.createElement("img");o.classList.add("icon"),1===t.getIsDefault?o.setAttribute("src","icons/weather-sunny.png"):o.setAttribute("src","icons/todo.png"),r.appendChild(o);const d=document.createElement("div");d.classList.add("list-title"),d.textContent=t.getTitle,r.appendChild(d);const u=document.createElement("img");u.classList.add("edit"),u.setAttribute("src","icons/pencil.png"),n.appendChild(u);const c=document.createElement("img");return c.classList.add("delete"),c.setAttribute("src","icons/trash.png"),n.appendChild(c),l}function l(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function r(t){let e=0;for(let s=0;s<i.length;s++)if(i[s].setListNumber=s,0!==i[s].getTodos.length){let l=0;const r=i[s].getListNumber;for(let n of i[s].getTodos){n.setListNumber=s,n.setTodoNumber=l;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${r}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${l}`),l++,e++}}}let n=[];function o(t){if(""===t)return"";let e=new Date(`${t}`).toDateString();return e.slice(4,10)+", "+e.slice(11)}function d(t,e){n.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),"none"===e.getPriority?i.classList.toggle("none"):"medium"===e.getPriority?i.classList.toggle("medium"):"high"===e.getPriority?i.classList.toggle("high"):"normal"===e.getPriority&&i.classList.toggle("normal"),t.appendChild(i);const s=document.createElement("div");s.classList.add("a-list"),i.appendChild(s);const l=document.createElement("div");l.classList.add("description"),l.textContent=e.getDescription,i.appendChild(l);const r=document.createElement("div");r.classList.add("collapse"),i.appendChild(r);const d=document.createElement("div");d.classList.add("left"),s.appendChild(d);const u=document.createElement("div");u.classList.add("right"),s.appendChild(u);const c=document.createElement("img");c.setAttribute("src","icons/unfold.png"),c.setAttribute("alt","collapse icon"),c.setAttribute("id","hide"),r.appendChild(c);const a=document.createElement("input");a.setAttribute("type","checkbox"),a.setAttribute("id","todo-checkbox"),a.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(a.checked=!0),d.appendChild(a);const m=document.createElement("div");m.innerHTML=`<p class="tName"><strong>${e.getTitle}</strong></p>\n    <p class='tDate'>${o(e.getDueDate)}\n    </p>`,d.appendChild(m);const g=document.createElement("img");g.setAttribute("src","icons/pencil.png"),g.classList.add("edit"),u.appendChild(g);const h=document.createElement("img");return h.setAttribute("src","icons/trash.png"),h.classList.add("delete"),u.appendChild(h),i}function u(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function c(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function a(t,e){let i=0;for(let s of t){let t=s.getTitle,l=s.getDescription,r=s.dueDate,n=s.getPriority,o=s.getListNumber,d=s.getIsCompleted,u=s.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${l},${r},${n},${o},${d},${u}`),i++}}function m(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,s=e.getListNumber;1===e.getIsDefault?localStorage.setItem(`list_${i}`,`${t},${s},1`):localStorage.setItem(`list_${i}`,`${t},${s}`),a(e.getTodos,i),i++}}let g="0";function h(t){var e;t.preventDefault(),i[parseInt(g)].setTitle=t.target.firstElementChild.value,t.target.previousElementSibling.textContent=t.target.firstElementChild.value,u(x,g,t.target.firstElementChild.value),(e=t.target.parentNode.parentNode).firstElementChild.removeChild(e.firstElementChild.lastElementChild),e.firstElementChild.lastElementChild.removeAttribute("id"),m(i,g)}function b(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");A.removeChild(t);const s=Array.from(document.querySelectorAll(".a-list"));let l=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let s of e)s.getAttribute("list-number")===i&&t.removeChild(s)}($,l,e),l=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,s){i.splice(parseInt(e),1);let l=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${l}`),l++;r(s)}(s,e,l),e===g&&function(t,e){0===i.length?u(x,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),u(x,e,i[0].getTitle),c(t,"0"),g="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),u(x,e,i[parseInt(e)-1].getTitle),c(t,""+(parseInt(e)-1)),g=""+(parseInt(e)-1))}(l,e),g=document.querySelector("#active-list").getAttribute("list-number")}m(i,g)}(this);else if("edit"===t.target.classList.value)(function(t){const e=t.firstElementChild.lastElementChild;e.setAttribute("id","hide");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("maxlength","40"),i.required=!0,i.value=e.textContent;const s=document.createElement("form");return s.setAttribute("action","#"),s.classList.add("edit-list-form"),t.firstElementChild.appendChild(s),s.appendChild(i),s}(this)).onsubmit=h;else{l(A),this.setAttribute("id","active-list");let t=this.getAttribute("list-number");u(x,t,this.firstElementChild.lastElementChild.textContent),c(Array.from(document.querySelectorAll(".a-todo")),t),g=t,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",g)}}function p(t){!0===t.checked?t.checked=!1:t.checked=!0}function f(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),$.removeChild(this),r(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else if("edit"===t.target.classList.value){const t=document.querySelector(".edit-todo-modal");t.removeAttribute("id");const e=function(t,e,i){let s=t.getAttribute("list-number"),l=t.getAttribute("todo-number"),r=i[parseInt(s)].getTodos[parseInt(l)],n=e.firstElementChild.nextElementSibling;n.firstElementChild.value=r.getTitle,n.firstElementChild.nextElementSibling.lastElementChild.value=r.getDueDate;const o=r.getPriority;let d=n.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild;return function(t,e){let i=e.firstElementChild;for(;;){if(i.getAttribute("value")===t){i.selected=!0;break}i=i.nextElementSibling}}(o,d),d.parentNode.nextElementSibling.value=r.getDescription,r}(this,t,i),s=t.lastElementChild;s.onsubmit=t=>{!function(t,e,s){e.preventDefault(),s.classList.remove(t.getPriority),t.setTitle=e.target.firstElementChild.value,t.setDueDate=e.target.firstElementChild.nextElementSibling.lastElementChild.value,t.setPriority=e.target.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild.value,t.setDescription=e.target.lastElementChild.previousElementSibling.value,e.target.reset(),e.target.parentNode.setAttribute("id","hide"),function(t,e){e.firstElementChild.firstElementChild.lastElementChild.innerHTML=`<p class="tName">\n                  <strong>${t.getTitle}</strong>\n                </p>\n                <p class='tDate'>${o(t.getDueDate)}</p>`,e.firstElementChild.nextElementSibling.textContent=`${t.getDescription}`,e.classList.toggle(t.getPriority)}(t,s),m(i,g)}(e,t,this)},s.onreset=()=>{t.setAttribute("id","hide")}}else{"checkbox"===t.target.getAttribute("type")&&p(t.target);const e=this.getAttribute("list-number"),s=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(s)].changeCompleteStatus(),p(this.firstElementChild.firstElementChild.firstElementChild)}m(i,g)}const A=document.querySelector(".all-list"),v=document.querySelector("#list-name"),E=document.querySelector(".list-form"),C=document.querySelector(".add-new-list"),S=document.querySelector(".new-list-modal"),y=document.querySelector(".add-todo"),L=document.querySelector(".new-todo-modal"),N=document.querySelector(".todo-form"),T=document.querySelector("#todo-name"),D=document.querySelector("#due-date"),I=document.querySelector("#priority"),q=document.querySelector("#description"),$=document.querySelector(".all-todo"),x=document.querySelector(".todo-header"),k=document.querySelector(".menu");if(localStorage.getItem("activeListNumber")){let l=function(){let i=[],s=[];for(let l in localStorage)if(l.includes("list")&&!l.includes("todo")){const e=localStorage.getItem(l).split(","),s=e[0],r=parseInt(e[1]);if(3===e.length){const e=new t(s,[],r,1);i.push(e)}else{const e=new t(s,[],r);i.push(e)}}else if(l.includes("todo")){const t=localStorage.getItem(l).split(","),i=t[0],r=t[1],n=t[2],o=t[3],d=parseInt(t[4]),u=parseInt(t[5]),c=parseInt(t[6]),a=new e(i,r,n,o,d,u,c);s.push(a)}let l=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(l,s),l}();g=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){s(e,A,S);for(let t of e.getTodos)d($,t)}const e=document.querySelector(`.all-list div[list-number="${g}"]`);null!==e&&e.setAttribute("id","active-list");const l=Array.from(document.querySelectorAll(".a-todo"));u(x,g,i[parseInt(g)].getTitle),c(l,g)}(l)}else{let e=new t("My Day",[],0,1);s(e,A,S),u(x,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),m(i,g)}const w=document.querySelectorAll(".all-list .a-list"),P=document.querySelectorAll(".all-todo .a-todo");y.onclick=t=>{L.removeAttribute("id")},C.addEventListener("click",(()=>{S.removeAttribute("id"),A.scrollTo(0,A.scrollHeight)})),E.onsubmit=function(e){e.preventDefault();let r=new t(v.value,[],i.length);l(A);const n=s(r,A,S);n.setAttribute("id","active-list");const o=Array.from(document.querySelectorAll(".a-todo"));u(x,r.getListNumber,r.getTitle),c(o,r.getListNumber.toString()),g=r.getListNumber.toString(),n.onclick=b,e.target.reset(),S.setAttribute("id","hide"),A.scrollTo(0,A.scrollHeight),m(i,g)},E.onreset=()=>{S.setAttribute("id","hide")},N.onsubmit=function(t){t.preventDefault();const s=parseInt(x.getAttribute("list-number")),l=i[parseInt(s)].getTodos.length;let r=new e(T.value,q.value,D.value,I.value,s,0,l);i[parseInt(s)].getTodos.push(r),d($,r).onclick=f,L.setAttribute("id","hide"),$.scrollTo(0,$.scrollHeight),t.target.reset(),m(i,g)},N.onreset=()=>{L.setAttribute("id","hide")},w.forEach((t=>{t.onclick=b})),P.forEach((t=>{t.onclick=f})),k.addEventListener("click",(function(t){const e=document.querySelector(".side-bar"),i=document.querySelector(".sidebar-content");i.classList.add("show-sidebar-content"),e.classList.add("show-sidebar"),window.onclick=t=>{t.target===e&&(e.classList.remove("show-sidebar"),i.classList.remove("show-sidebar-content"))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,