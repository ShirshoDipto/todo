(()=>{"use strict";class t{constructor(t,e,i){this.title=t,this.todos=e,this.listNumber=i}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,s,o,l,r){this.title=t,this.description=e,this.dueDate=i,this.priority=s,this.listNumber=o,this.completed=l,this.todoNumber=r}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function s(t,e,s){i.push(t);const o=document.createElement("div");o.classList.add("a-list"),o.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(o,s);const l=document.createElement("div");l.classList.add("left"),o.appendChild(l);const r=document.createElement("div");r.classList.add("right"),o.appendChild(r);const n=document.createElement("img");n.classList.add("icon"),n.setAttribute("src","icons/plus.png"),l.appendChild(n);const c=document.createElement("div");c.classList.add("list-title"),c.textContent=t.getTitle,l.appendChild(c);const d=document.createElement("img");d.classList.add("edit"),d.setAttribute("src","icons/plus.png"),r.appendChild(d);const u=document.createElement("img");u.classList.add("icon"),u.setAttribute("src","icons/plus.png"),r.appendChild(u);const a=document.createElement("img");a.classList.add("icon"),a.setAttribute("src","icons/plus.png"),r.appendChild(a);const m=document.createElement("img");return m.classList.add("delete"),m.setAttribute("src","icons/plus.png"),r.appendChild(m),o}function o(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function l(t){let e=0;for(let s=0;s<i.length;s++)if(i[s].setListNumber=s,0!==i[s].getTodos.length){let o=0;const l=i[s].getListNumber;for(let r of i[s].getTodos){r.setListNumber=s,r.setTodoNumber=o;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${l}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${o}`),o++,e++}}}let r=[];function n(t,e){r.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),t.appendChild(i);const s=document.createElement("div");s.classList.add("a-list"),i.appendChild(s);const o=document.createElement("div");o.classList.add("description"),o.textContent=e.getDescription,i.appendChild(o);const l=document.createElement("div");l.classList.add("collapse"),i.appendChild(l);const n=document.createElement("div");n.classList.add("left"),s.appendChild(n);const c=document.createElement("div");c.classList.add("right"),s.appendChild(c);const d=document.createElement("img");d.setAttribute("src","icons/plus.png"),d.setAttribute("alt","collapse icon"),l.appendChild(d);const u=document.createElement("input");u.setAttribute("type","checkbox"),u.setAttribute("id","todo-checkbox"),u.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(u.checked=!0),n.appendChild(u);const a=document.createElement("div");a.textContent=`${e.getTitle} (Due: ${e.getDueDate})`,n.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/plus.png"),m.classList.add("icon"),c.appendChild(m);const g=document.createElement("img");g.setAttribute("src","icons/plus.png"),g.classList.add("icon"),c.appendChild(g);const b=document.createElement("img");b.setAttribute("src","icons/plus.png"),b.classList.add("icon"),c.appendChild(b);const p=document.createElement("img");return p.setAttribute("src","icons/plus.png"),p.classList.add("delete"),c.appendChild(p),i}function c(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function d(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function u(t,e){let i=0;for(let s of t){let t=s.getTitle,o=s.getDescription,l=s.dueDate,r=s.getPriority,n=s.getListNumber,c=s.getIsCompleted,d=s.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${o},${l},${r},${n},${c},${d}`),i++}}function a(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,s=e.getListNumber;localStorage.setItem(`list_${i}`,`${t},${s}`),u(e.getTodos,i),i++}}let m="0";function g(t){var e;t.preventDefault(),console.log(m),i[parseInt(m)].setTitle=t.target.firstElementChild.value,t.target.previousElementSibling.textContent=t.target.firstElementChild.value,(e=t.target.parentNode.parentNode).firstElementChild.removeChild(e.firstElementChild.lastElementChild),e.firstElementChild.lastElementChild.removeAttribute("id"),a(i,m)}function b(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");f.removeChild(t);const s=Array.from(document.querySelectorAll(".a-list"));let o=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let s of e)s.getAttribute("list-number")===i&&t.removeChild(s)}($,o,e),o=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,s){i.splice(parseInt(e),1);let o=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${o}`),o++;l(s)}(s,e,o),e===m&&function(t,e){0===i.length?c(D,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),c(D,e,i[0].getTitle),d(t,"0"),m="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),c(D,e,i[parseInt(e)-1].getTitle),d(t,""+(parseInt(e)-1)),m=""+(parseInt(e)-1))}(o,e),m=e}a(i,m)}(this);else if("edit"===t.target.classList.value)(function(t){const e=t.firstElementChild.lastElementChild;e.setAttribute("id","hide");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("maxlength","30"),i.required=!0,i.value=e.textContent;const s=document.createElement("form");return s.setAttribute("action","#"),t.firstElementChild.appendChild(s),s.appendChild(i),console.log(t),s}(this)).onsubmit=g;else{o(f),this.setAttribute("id","active-list");let t=this.getAttribute("list-number");c(D,t,this.firstElementChild.lastElementChild.textContent),d(Array.from(document.querySelectorAll(".a-todo")),t),m=t,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",m)}console.log(i)}function p(t){!0===t.checked?t.checked=!1:t.checked=!0}function h(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),console.table(i),$.removeChild(this),l(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else{"checkbox"===t.target.getAttribute("type")&&p(t.target);const e=this.getAttribute("list-number"),s=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(s)].changeCompleteStatus(),p(this.firstElementChild.firstElementChild.firstElementChild),console.log(this.firstElementChild.firstElementChild.firstElementChild)}a(i,m)}const f=document.querySelector(".all-list"),A=document.querySelector("#list-name"),C=document.querySelector(".list-form"),v=document.querySelector(".add-new-list"),E=document.querySelector(".new-list-modal"),L=document.querySelector(".add-todo"),y=document.querySelector(".new-todo-modal"),S=document.querySelector(".todo-form"),N=document.querySelector("#todo-name"),T=document.querySelector("#due-date"),I=document.querySelector("#priority"),q=document.querySelector("#description"),$=document.querySelector(".all-todo"),D=document.querySelector(".todo-header");if(localStorage.getItem("activeListNumber")){let o=function(){let i=[],s=[];for(let o in localStorage)if(o.includes("list")&&!o.includes("todo")){const e=localStorage.getItem(o).split(","),s=e[0],l=parseInt(e[1]),r=new t(s,[],l);i.push(r)}else if(o.includes("todo")){const t=localStorage.getItem(o).split(","),i=t[0],l=t[1],r=t[2],n=t[3],c=parseInt(t[4]),d=parseInt(t[5]),u=parseInt(t[6]),a=new e(i,l,r,n,c,d,u);s.push(a)}let o=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(o,s),o}();m=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){s(e,f,E);for(let t of e.getTodos)n($,t)}const e=document.querySelector(`.all-list div[list-number="${m}"]`);null!==e&&e.setAttribute("id","active-list");const o=Array.from(document.querySelectorAll(".a-todo"));c(D,m,i[parseInt(m)].getTitle),d(o,m),console.log(i)}(o)}else{let e=new t("My Day",[],0);s(e,f,E),c(D,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),a(i,m)}const x=document.querySelectorAll(".all-list .a-list"),k=document.querySelectorAll(".all-todo .a-todo");L.onclick=()=>{y.removeAttribute("id")},v.addEventListener("click",(()=>{E.removeAttribute("id")})),C.onsubmit=function(e){console.log(e.target),e.preventDefault();let l=new t(A.value,[],i.length);o(f);const r=s(l,f,E);r.setAttribute("id","active-list");const n=Array.from(document.querySelectorAll(".a-todo"));c(D,l.getListNumber,l.getTitle),d(n,l.getListNumber.toString()),m=l.getListNumber.toString(),r.onclick=b,e.target.reset(),E.setAttribute("id","hide"),console.log(i),a(i,m)},C.onreset=()=>{E.setAttribute("id","hide")},S.onsubmit=function(t){t.preventDefault();const s=parseInt(D.getAttribute("list-number")),o=i[parseInt(s)].getTodos.length;let l=new e(N.value,q.value,T.value,I.value,s,0,o);i[parseInt(s)].getTodos.push(l),n($,l).onclick=h,y.setAttribute("id","hide"),t.target.reset(),console.table(i),a(i,m)},S.onreset=()=>{y.setAttribute("id","hide")},x.forEach((t=>{t.onclick=b})),k.forEach((t=>{t.onclick=h}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,