(()=>{"use strict";class t{constructor(t,e,s){this.title=t,this.todos=e,this.listNumber=s}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewTodo(t){this.todos.push(t)}}class e{constructor(t,e,s,i,o){this.title=t,this.description=e,this.dueDate=s,this.priority=i,this.todoNumber=o}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let s=[],i=new t("My Day",[],0);s.push(i),console.log(s),console.log([]);const o=document.querySelector(".all-list"),n=document.querySelector("#list-name"),c=document.querySelector(".list-form"),d=document.querySelector(".add-new-list"),l=document.querySelector(".new-list-modal"),r=document.querySelector(".add-todo"),u=document.querySelector(".new-todo-modal"),a=document.querySelector(".todo-form"),m=document.querySelector(".cancel-todo"),p=document.querySelector("#todo-name"),g=document.querySelector("#due-date"),h=document.querySelector("#priority"),b=document.querySelector("#description"),C=document.querySelector(".todos");console.log(a),console.log(m),console.log(p),console.log(g),console.log(h),console.log(b),r.onclick=()=>{u.removeAttribute("id")},d.addEventListener("click",(()=>{l.removeAttribute("id")})),c.onsubmit=function(e){e.preventDefault();let i=new t(n.value,[],s.length);!function(t,e,i){s.push(t),console.log(s);const o=document.createElement("div");o.classList.add("a-list"),e.insertBefore(o,i);const n=document.createElement("div");n.classList.add("left"),o.appendChild(n);const c=document.createElement("div");c.classList.add("right"),o.appendChild(c);const d=document.createElement("img");d.classList.add("icon"),d.setAttribute("src","icons/plus.png"),n.appendChild(d);const l=document.createElement("div");l.classList.add("list-title"),l.textContent=t.getTitle,n.appendChild(l);const r=document.createElement("img");r.classList.add("icon"),r.setAttribute("src","icons/plus.png"),c.appendChild(r);const u=document.createElement("img");u.classList.add("icon"),u.setAttribute("src","icons/plus.png"),c.appendChild(u);const a=document.createElement("img");a.classList.add("icon"),a.setAttribute("src","icons/plus.png"),c.appendChild(a);const m=document.createElement("img");m.classList.add("icon"),m.setAttribute("src","icons/plus.png"),c.appendChild(m)}(i,o,l),console.log(l),console.log(i),e.target.reset(),l.setAttribute("id","hide")},c.onreset=()=>{l.setAttribute("id","hide")},a.onsubmit=function(t){t.preventDefault();let i=new e(p.value,b.value,g.value,h.value,s.length);!function(t,e){console.log(`the container is ${t}`);const s=document.createElement("div");s.classList.add("a-todo"),console.log(`the aTodo is ${s}`),t.appendChild(s);const i=document.createElement("div");i.classList.add("a-list"),s.appendChild(i);const o=document.createElement("div");o.classList.add("description"),o.textContent=e.getDescription,s.appendChild(o);const n=document.createElement("div");n.classList.add("collapse"),s.appendChild(n);const c=document.createElement("div");c.classList.add("left"),i.appendChild(c);const d=document.createElement("div");d.classList.add("right"),i.appendChild(d);const l=document.createElement("img");l.setAttribute("src","icons/plus.png"),l.setAttribute("alt","collapse icon"),n.appendChild(l);const r=document.createElement("img");r.setAttribute("src","icons/plus.png"),l.setAttribute("alt","icon img"),r.classList.add("icon"),c.appendChild(r);const u=document.createElement("div");u.textContent=`${e.getTitle} (${e.getDueDate})`,c.appendChild(u);const a=document.createElement("img");a.setAttribute("src","icons/plus.png"),l.setAttribute("alt","icon img"),a.classList.add("icon"),d.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/plus.png"),l.setAttribute("alt","icon img"),m.classList.add("icon"),d.appendChild(m);const p=document.createElement("img");p.setAttribute("src","icons/plus.png"),l.setAttribute("alt","icon img"),p.classList.add("icon"),d.appendChild(p);const g=document.createElement("img");g.setAttribute("src","icons/plus.png"),l.setAttribute("alt","icon img"),g.classList.add("icon"),d.appendChild(g)}(C,i),u.setAttribute("id","hide"),t.target.reset()},a.onreset=()=>{u.setAttribute("id","hide")}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,