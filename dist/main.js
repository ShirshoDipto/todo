(()=>{"use strict";class t{constructor(t,e,i){this.title=t,this.todos=e,this.listNumber=i}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,s,o,n,r){this.title=t,this.description=e,this.dueDate=i,this.priority=s,this.listNumber=o,this.completed=n,this.todoNumber=r}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){!0===this.completed?this.completed=!1:this.completed=!0}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function s(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function o(t){let e=0;for(let s=0;s<i.length;s++)if(i[s].setListNumber=s,0!==i[s].getTodos.length){let o=0;const n=i[s].getListNumber;for(let r of i[s].getTodos){r.setListNumber=s,r.setTodoNumber=o;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${n}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${o}`),o++,e++}}}let n=[];function r(t,e,i){t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function l(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function d(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");m.removeChild(t);const s=Array.from(document.querySelectorAll(".a-list"));let n=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let s of e)s.getAttribute("list-number")===i&&t.removeChild(s)}(S,n,e),n=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,s){i.splice(parseInt(e),1);let n=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${n}`),n++;o(s)}(s,e,n),c(n,e),N.getAttribute("list-number")===e&&c(n,e)}}(this);else{s(m),this.setAttribute("id","active-list");let e=t.target.getAttribute("list-number");r(N,e,this.firstElementChild.lastElementChild.textContent),l(Array.from(document.querySelectorAll(".a-todo")),e)}console.log(i)}function c(t,e){0===i.length?(N.firstElementChild.textContent="Add a List",N.firstElementChild.nextElementSibling.textContent=""):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),r(N,e,i[0].getTitle),l(t,"0")):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),r(N,e,i[parseInt(e)-1].getTitle),l(t,""+(parseInt(e)-1)))}function u(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),console.log(i),S.removeChild(this),o(Array.from(document.querySelectorAll(".all-todo .a-todo")))}}let a=new t("My Day",[],0);i.push(a);const m=document.querySelector(".all-list"),p=document.querySelector("#list-name"),b=document.querySelector(".list-form"),h=document.querySelector(".add-new-list"),g=document.querySelector(".new-list-modal"),A=document.querySelector(".add-todo"),f=document.querySelector(".new-todo-modal"),v=document.querySelector(".todo-form"),y=document.querySelector("#todo-name"),C=document.querySelector("#due-date"),L=document.querySelector("#priority"),E=document.querySelector("#description"),S=document.querySelector(".all-todo"),N=document.querySelector(".todo-header"),q=document.querySelector(".all-list .a-list");A.onclick=()=>{f.removeAttribute("id")},h.addEventListener("click",(()=>{g.removeAttribute("id")})),b.onsubmit=function(e){e.preventDefault();let o=new t(p.value,[],i.length);s(m),function(t,e,s){i.push(t);const o=document.createElement("div");o.classList.add("a-list"),o.setAttribute("list-number",`${t.getListNumber}`),o.setAttribute("id","active-list"),e.insertBefore(o,s);const n=document.createElement("div");n.classList.add("left"),o.appendChild(n);const r=document.createElement("div");r.classList.add("right"),o.appendChild(r);const l=document.createElement("img");l.classList.add("icon"),l.setAttribute("src","icons/plus.png"),n.appendChild(l);const d=document.createElement("div");d.classList.add("list-title"),d.textContent=t.getTitle,n.appendChild(d);const c=document.createElement("img");c.classList.add("icon"),c.setAttribute("src","icons/plus.png"),r.appendChild(c);const u=document.createElement("img");u.classList.add("icon"),u.setAttribute("src","icons/plus.png"),r.appendChild(u);const a=document.createElement("img");a.classList.add("icon"),a.setAttribute("src","icons/plus.png"),r.appendChild(a);const m=document.createElement("img");m.classList.add("delete"),m.setAttribute("src","icons/plus.png"),r.appendChild(m)}(o,m,g);const n=Array.from(document.querySelectorAll(".a-todo"));r(N,o.getListNumber,o.getTitle),l(n,o.getListNumber),document.getElementById("active-list").onclick=d,e.target.reset(),g.setAttribute("id","hide"),console.log(i)},b.onreset=()=>{g.setAttribute("id","hide")},v.onsubmit=function(t){t.preventDefault();const s=N.getAttribute("list-number"),o=i[parseInt(s)].getTodos.length;let r=new e(y.value,E.value,C.value,L.value,s,!1,o);i[parseInt(s)].getTodos.push(r);const l=function(t,e){n.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),t.appendChild(i);const s=document.createElement("div");s.classList.add("a-list"),i.appendChild(s);const o=document.createElement("div");o.classList.add("description"),o.textContent=e.getDescription,i.appendChild(o);const r=document.createElement("div");r.classList.add("collapse"),i.appendChild(r);const l=document.createElement("div");l.classList.add("left"),s.appendChild(l);const d=document.createElement("div");d.classList.add("right"),s.appendChild(d);const c=document.createElement("img");c.setAttribute("src","icons/plus.png"),c.setAttribute("alt","collapse icon"),r.appendChild(c);const u=document.createElement("input");u.setAttribute("type","checkbox"),u.setAttribute("id","todo-checkbox"),u.setAttribute("name","todo-checkbox"),l.appendChild(u);const a=document.createElement("div");a.textContent=`${e.getTitle} (Due: ${e.getDueDate})`,l.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/plus.png"),m.classList.add("icon"),d.appendChild(m);const p=document.createElement("img");p.setAttribute("src","icons/plus.png"),p.classList.add("icon"),d.appendChild(p);const b=document.createElement("img");b.setAttribute("src","icons/plus.png"),b.classList.add("icon"),d.appendChild(b);const h=document.createElement("img");return h.setAttribute("src","icons/plus.png"),h.classList.add("delete"),d.appendChild(h),i}(S,r);l.onclick=u,f.setAttribute("id","hide"),t.target.reset(),console.log(i)},v.onreset=()=>{f.setAttribute("id","hide")},q.onclick=d})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,