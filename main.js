(()=>{"use strict";class t{constructor(t,e,i,l=0){this.title=t,this.todos=e,this.listNumber=i,this.isDefault=l}get getIsDefault(){return this.isDefault}set setIsDefault(t){this.isDefault=t}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}set setTodos(t){this.todos=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,l,s,o,n){this.title=t,this.description=e,this.dueDate=i,this.priority=l,this.listNumber=s,this.completed=o,this.todoNumber=n}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function l(t,e,l){i.push(t);const s=document.createElement("div");s.classList.add("a-list"),s.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(s,l);const o=document.createElement("div");o.classList.add("left"),s.appendChild(o);const n=document.createElement("div");n.classList.add("right"),s.appendChild(n);const r=document.createElement("img");r.classList.add("icon"),1===t.getIsDefault?r.setAttribute("src","icons/weather-sunny.png"):r.setAttribute("src","icons/todo.png"),o.appendChild(r);const d=document.createElement("div");d.classList.add("list-title"),d.textContent=t.getTitle,o.appendChild(d);const c=document.createElement("img");c.classList.add("edit"),c.setAttribute("src","icons/pencil.png"),n.appendChild(c);const u=document.createElement("img");u.classList.add("icon"),u.setAttribute("src","icons/arrow-up.png"),n.appendChild(u);const a=document.createElement("img");a.classList.add("icon"),a.setAttribute("src","icons/arrow-down.png"),n.appendChild(a);const m=document.createElement("img");return m.classList.add("delete"),m.setAttribute("src","icons/trash.png"),n.appendChild(m),s}function s(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function o(t){let e=0;for(let l=0;l<i.length;l++)if(i[l].setListNumber=l,0!==i[l].getTodos.length){let s=0;const o=i[l].getListNumber;for(let n of i[l].getTodos){n.setListNumber=l,n.setTodoNumber=s;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${o}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${s}`),s++,e++}}}let n=[];function r(t,e){n.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),t.appendChild(i);const l=document.createElement("div");l.classList.add("a-list"),i.appendChild(l);const s=document.createElement("div");s.classList.add("description"),s.textContent=e.getDescription,i.appendChild(s);const o=document.createElement("div");o.classList.add("collapse"),i.appendChild(o);const r=document.createElement("div");r.classList.add("left"),l.appendChild(r);const d=document.createElement("div");d.classList.add("right"),l.appendChild(d);const c=document.createElement("img");c.setAttribute("src","icons/unfold.png"),c.setAttribute("alt","collapse icon"),o.appendChild(c);const u=document.createElement("input");u.setAttribute("type","checkbox"),u.setAttribute("id","todo-checkbox"),u.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(u.checked=!0),r.appendChild(u);const a=document.createElement("div");a.textContent=`${e.getTitle} (Due: ${e.getDueDate})`,r.appendChild(a);const m=document.createElement("img");m.setAttribute("src","icons/pencil.png"),m.classList.add("edit"),d.appendChild(m);const g=document.createElement("img");g.setAttribute("src","icons/arrow-up.png"),g.classList.add("icon"),d.appendChild(g);const h=document.createElement("img");h.setAttribute("src","icons/arrow-down.png"),h.classList.add("icon"),d.appendChild(h);const b=document.createElement("img");return b.setAttribute("src","icons/trash.png"),b.classList.add("delete"),d.appendChild(b),i}function d(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function c(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function u(t,e){let i=0;for(let l of t){let t=l.getTitle,s=l.getDescription,o=l.dueDate,n=l.getPriority,r=l.getListNumber,d=l.getIsCompleted,c=l.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${s},${o},${n},${r},${d},${c}`),i++}}function a(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,l=e.getListNumber;1===e.getIsDefault?localStorage.setItem(`list_${i}`,`${t},${l},1`):localStorage.setItem(`list_${i}`,`${t},${l}`),u(e.getTodos,i),i++}}let m="0";function g(t){var e;t.preventDefault(),console.log(m),i[parseInt(m)].setTitle=t.target.firstElementChild.value,t.target.previousElementSibling.textContent=t.target.firstElementChild.value,(e=t.target.parentNode.parentNode).firstElementChild.removeChild(e.firstElementChild.lastElementChild),e.firstElementChild.lastElementChild.removeAttribute("id"),a(i,m)}function h(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");f.removeChild(t);const l=Array.from(document.querySelectorAll(".a-list"));let s=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let l of e)l.getAttribute("list-number")===i&&t.removeChild(l)}(q,s,e),s=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,l){i.splice(parseInt(e),1);let s=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${s}`),s++;o(l)}(l,e,s),e===m&&function(t,e){0===i.length?d($,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),d($,e,i[0].getTitle),c(t,"0"),m="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),d($,e,i[parseInt(e)-1].getTitle),c(t,""+(parseInt(e)-1)),m=""+(parseInt(e)-1))}(s,e),m=document.querySelector("#active-list").getAttribute("list-number"),console.log(m)}a(i,m)}(this);else if("edit"===t.target.classList.value)(function(t){const e=t.firstElementChild.lastElementChild;e.setAttribute("id","hide");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("maxlength","30"),i.required=!0,i.value=e.textContent;const l=document.createElement("form");return l.setAttribute("action","#"),t.firstElementChild.appendChild(l),l.appendChild(i),console.log(t),l}(this)).onsubmit=g;else{s(f),this.setAttribute("id","active-list");let t=this.getAttribute("list-number");d($,t,this.firstElementChild.lastElementChild.textContent),c(Array.from(document.querySelectorAll(".a-todo")),t),m=t,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",m)}console.log(i)}function b(t){!0===t.checked?t.checked=!1:t.checked=!0}function p(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),console.table(i),q.removeChild(this),o(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else if("edit"===t.target.classList.value){const t=document.querySelector(".edit-todo-modal");t.removeAttribute("id");const e=function(t,e,i){let l=t.getAttribute("list-number"),s=t.getAttribute("todo-number"),o=i[parseInt(l)].getTodos[parseInt(s)];o.setTitle="hi there";let n=e.firstElementChild.nextElementSibling;n.firstElementChild.value=o.getTitle,n.firstElementChild.nextElementSibling.lastElementChild.value=o.getDueDate;const r=o.getPriority;let d=n.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild;return function(t,e){let i=e.firstElementChild;for(;;){if(i.getAttribute("value")===t){i.selected=!0;break}i=i.nextElementSibling}}(r,d),d.parentNode.nextElementSibling.value=o.getDescription,o}(this,t,i),l=t.lastElementChild;l.onsubmit=t=>{!function(t,e){e.preventDefault(),t.setTitle=e.target.firstElementChild.value,t.setDueDate=e.target.firstElementChild.nextElementSibling.lastElementChild.value,t.setPriority=e.target.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild.value,t.setDescription=e.target.lastElementChild.previousElementSibling.value,e.target.parentNode.setAttribute("id","hide"),function(t,e){e.firstElementChild.firstElementChild.lastElementChild.textContent=`${t.getTitle} (Due: ${t.getDueDate})`,e.firstElementChild.nextElementSibling.textContent=`${t.getDescription}`}(t,document.querySelector(`.all-todo div[todo-number="${t.getTodoNumber}"]`)),a(i,m)}(e,t)},l.onreset=()=>{t.setAttribute("id","hide")}}else{"checkbox"===t.target.getAttribute("type")&&b(t.target);const e=this.getAttribute("list-number"),l=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(l)].changeCompleteStatus(),b(this.firstElementChild.firstElementChild.firstElementChild),console.log(this.firstElementChild.firstElementChild.firstElementChild)}a(i,m)}const f=document.querySelector(".all-list"),A=document.querySelector("#list-name"),C=document.querySelector(".list-form"),E=document.querySelector(".add-new-list"),v=document.querySelector(".new-list-modal"),S=document.querySelector(".add-todo"),y=document.querySelector(".new-todo-modal"),L=document.querySelector(".todo-form"),N=document.querySelector("#todo-name"),T=document.querySelector("#due-date"),D=document.querySelector("#priority"),I=document.querySelector("#description"),q=document.querySelector(".all-todo"),$=document.querySelector(".todo-header");if(localStorage.getItem("activeListNumber")){let s=function(){let i=[],l=[];for(let s in localStorage)if(s.includes("list")&&!s.includes("todo")){const e=localStorage.getItem(s).split(","),l=e[0],o=parseInt(e[1]);if(3===e.length){const e=new t(l,[],o,1);i.push(e)}else{const e=new t(l,[],o);i.push(e)}}else if(s.includes("todo")){const t=localStorage.getItem(s).split(","),i=t[0],o=t[1],n=t[2],r=t[3],d=parseInt(t[4]),c=parseInt(t[5]),u=parseInt(t[6]),a=new e(i,o,n,r,d,c,u);l.push(a)}let s=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(s,l),s}();m=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){l(e,f,v);for(let t of e.getTodos)r(q,t)}const e=document.querySelector(`.all-list div[list-number="${m}"]`);null!==e&&e.setAttribute("id","active-list");const s=Array.from(document.querySelectorAll(".a-todo"));d($,m,i[parseInt(m)].getTitle),c(s,m),console.log(i)}(s)}else{let e=new t("My Day",[],0,1);l(e,f,v),d($,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),a(i,m)}const x=document.querySelectorAll(".all-list .a-list"),w=document.querySelectorAll(".all-todo .a-todo");S.onclick=()=>{y.removeAttribute("id")},E.addEventListener("click",(()=>{v.removeAttribute("id"),f.scrollTo(0,f.scrollHeight)})),C.onsubmit=function(e){console.log(e.target),e.preventDefault();let o=new t(A.value,[],i.length);s(f);const n=l(o,f,v);n.setAttribute("id","active-list");const r=Array.from(document.querySelectorAll(".a-todo"));d($,o.getListNumber,o.getTitle),c(r,o.getListNumber.toString()),m=o.getListNumber.toString(),n.onclick=h,e.target.reset(),v.setAttribute("id","hide"),f.scrollTo(0,f.scrollHeight),console.log(i),a(i,m)},C.onreset=()=>{v.setAttribute("id","hide")},L.onsubmit=function(t){t.preventDefault();const l=parseInt($.getAttribute("list-number")),s=i[parseInt(l)].getTodos.length;let o=new e(N.value,I.value,T.value,D.value,l,0,s);i[parseInt(l)].getTodos.push(o),r(q,o).onclick=p,y.setAttribute("id","hide"),q.scrollTo(0,q.scrollHeight),t.target.reset(),console.table(i),a(i,m)},L.onreset=()=>{y.setAttribute("id","hide")},x.forEach((t=>{t.onclick=h})),w.forEach((t=>{t.onclick=p}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,