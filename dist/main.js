(()=>{"use strict";class t{constructor(t,e,i,l=0){this.title=t,this.todos=e,this.listNumber=i,this.isDefault=l}get getIsDefault(){return this.isDefault}set setIsDefault(t){this.isDefault=t}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getTodos(){return this.todos}set setTodos(t){this.todos=t}set setTitle(t){this.title=t}addNewList(t){this.todos.push(t)}}class e{constructor(t,e,i,l,s,r,n){this.title=t,this.description=e,this.dueDate=i,this.priority=l,this.listNumber=s,this.completed=r,this.todoNumber=n}get getTodoNumber(){return this.todoNumber}set setTodoNumber(t){this.todoNumber=t}get getIsCompleted(){return this.completed}changeCompleteStatus(){1===this.completed?this.completed=0:this.completed=1}get getListNumber(){return this.listNumber}set setListNumber(t){this.listNumber=t}get getTitle(){return this.title}get getDescription(){return this.description}get getDueDate(){return this.dueDate}get getPriority(){return this.priority}set setTitle(t){this.title=t}set setDescription(t){this.description=t}set setDueDate(t){this.dueDate=t}set setPriority(t){this.priority=t}}let i=[];function l(t,e,l){i.push(t);const s=document.createElement("div");s.classList.add("a-list"),s.setAttribute("list-number",`${t.getListNumber}`),e.insertBefore(s,l);const r=document.createElement("div");r.classList.add("left"),s.appendChild(r);const n=document.createElement("div");n.classList.add("right"),s.appendChild(n);const o=document.createElement("img");o.classList.add("icon"),1===t.getIsDefault?o.setAttribute("src","icons/weather-sunny.png"):o.setAttribute("src","icons/todo.png"),r.appendChild(o);const u=document.createElement("div");u.classList.add("list-title"),u.textContent=t.getTitle,r.appendChild(u);const d=document.createElement("img");d.classList.add("edit"),d.setAttribute("src","icons/pencil.png"),n.appendChild(d);const c=document.createElement("img");return c.classList.add("delete"),c.setAttribute("src","icons/trash.png"),n.appendChild(c),s}function s(t){if(0===i.length)return;const e=t.firstElementChild;if("active-list"===e.getAttribute("id"))e.removeAttribute("id");else{let t=e.nextElementSibling;for(;;){if("active-list"===t.getAttribute("id")){t.removeAttribute("id");break}t=t.nextElementSibling}}}function r(t){let e=0;for(let l=0;l<i.length;l++)if(i[l].setListNumber=l,0!==i[l].getTodos.length){let s=0;const r=i[l].getListNumber;for(let n of i[l].getTodos){n.setListNumber=l,n.setTodoNumber=s;let i=t[e];i.removeAttribute("list-number"),i.setAttribute("list-number",`${r}`),i.removeAttribute("todo-number"),i.setAttribute("todo-number",`${s}`),s++,e++}}}let n=[];function o(t){if(""===t)return"";let e=new Date(`${t}`).toDateString();return e.slice(4,10)+", "+e.slice(11)}function u(t,e){n.push(e);const i=document.createElement("div");i.classList.add("a-todo"),i.setAttribute("list-number",`${e.getListNumber}`),i.setAttribute("todo-number",`${e.getTodoNumber}`),"none"===e.getPriority?i.classList.toggle("none"):"medium"===e.getPriority?i.classList.toggle("medium"):"high"===e.getPriority?i.classList.toggle("high"):"normal"===e.getPriority&&i.classList.toggle("normal"),t.appendChild(i);const l=document.createElement("div");l.classList.add("a-list"),i.appendChild(l);const s=document.createElement("div");s.classList.add("description"),s.textContent=e.getDescription,i.appendChild(s);const r=document.createElement("div");r.classList.add("collapse"),i.appendChild(r);const u=document.createElement("div");u.classList.add("left"),l.appendChild(u);const d=document.createElement("div");d.classList.add("right"),l.appendChild(d);const c=document.createElement("img");c.setAttribute("src","icons/unfold.png"),c.setAttribute("alt","collapse icon"),c.setAttribute("id","hide"),r.appendChild(c);const a=document.createElement("input");a.setAttribute("type","checkbox"),a.setAttribute("id","todo-checkbox"),a.setAttribute("name","todo-checkbox"),1===e.getIsCompleted&&(a.checked=!0),u.appendChild(a);const m=document.createElement("div");m.innerHTML=`<p class="tName"><strong>${e.getTitle}</strong></p>\n    <p class='tDate'>${o(e.getDueDate)}\n    </p>`,u.appendChild(m);const g=document.createElement("img");g.setAttribute("src","icons/pencil.png"),g.classList.add("edit"),d.appendChild(g);const h=document.createElement("img");return h.setAttribute("src","icons/trash.png"),h.classList.add("delete"),d.appendChild(h),i}function d(t,e,i){null===e&&(t.firstElementChild.textContent=i),t.setAttribute("list-number",`${e}`),t.firstElementChild.textContent=i}function c(t,e){if(null!==t)for(let i of t)i.getAttribute("list-number")===e?i.removeAttribute("id"):i.setAttribute("id","hide")}function a(t,e){let i=0;for(let l of t){let t=l.getTitle,s=l.getDescription,r=l.dueDate,n=l.getPriority,o=l.getListNumber,u=l.getIsCompleted,d=l.getTodoNumber;localStorage.setItem(`list_${e}_todo_${i}`,`${t},${s},${r},${n},${o},${u},${d}`),i++}}function m(t,e){localStorage.clear();let i=0;localStorage.setItem("activeListNumber",e);for(let e of t){let t=e.getTitle,l=e.getListNumber;1===e.getIsDefault?localStorage.setItem(`list_${i}`,`${t},${l},1`):localStorage.setItem(`list_${i}`,`${t},${l}`),a(e.getTodos,i),i++}}let g="0";function h(t){var e;t.preventDefault(),i[parseInt(g)].setTitle=t.target.firstElementChild.value,t.target.previousElementSibling.textContent=t.target.firstElementChild.value,d(x,g,t.target.firstElementChild.value),(e=t.target.parentNode.parentNode).firstElementChild.removeChild(e.firstElementChild.lastElementChild),e.firstElementChild.lastElementChild.removeAttribute("id"),m(i,g)}function b(t){if("delete"===t.target.classList.value)!function(t){if("a-list"===t.classList.value){const e=t.getAttribute("list-number");A.removeChild(t);const l=Array.from(document.querySelectorAll(".a-list"));let s=Array.from(document.querySelectorAll(".all-todo .a-todo"));!function(t,e,i){for(let l of e)l.getAttribute("list-number")===i&&t.removeChild(l)}(q,s,e),s=Array.from(document.querySelectorAll(".all-todo .a-todo")),function(t,e,l){i.splice(parseInt(e),1);let s=0;for(let e of t)e.removeAttribute("list-number"),e.setAttribute("list-number",`${s}`),s++;r(l)}(l,e,s),e===g&&function(t,e){0===i.length?d(x,null,"Add a List"):"0"===e?(document.querySelector('.all-list div[list-number="0"]').setAttribute("id","active-list"),d(x,e,i[0].getTitle),c(t,"0"),g="0"):(document.querySelector(`.all-list div[list-number="${parseInt(e)-1}"]`).setAttribute("id","active-list"),d(x,e,i[parseInt(e)-1].getTitle),c(t,""+(parseInt(e)-1)),g=""+(parseInt(e)-1))}(s,e),g=document.querySelector("#active-list").getAttribute("list-number")}m(i,g)}(this);else if("edit"===t.target.classList.value)(function(t){const e=t.firstElementChild.lastElementChild;e.setAttribute("id","hide");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("maxlength","30"),i.required=!0,i.value=e.textContent;const l=document.createElement("form");return l.setAttribute("action","#"),l.classList.add("edit-list-form"),t.firstElementChild.appendChild(l),l.appendChild(i),l}(this)).onsubmit=h;else{s(A),this.setAttribute("id","active-list");let t=this.getAttribute("list-number");d(x,t,this.firstElementChild.lastElementChild.textContent),c(Array.from(document.querySelectorAll(".a-todo")),t),g=t,localStorage.removeItem("activeListNumber"),localStorage.setItem("activeListNumber",g)}}function p(t){!0===t.checked?t.checked=!1:t.checked=!0}function f(t){if("delete"===t.target.classList.value){const t=this.getAttribute("list-number"),e=this.getAttribute("todo-number");i[parseInt(t)].getTodos.splice(parseInt(e),1),q.removeChild(this),r(Array.from(document.querySelectorAll(".all-todo .a-todo")))}else if("edit"===t.target.classList.value){const t=document.querySelector(".edit-todo-modal");t.removeAttribute("id");const e=function(t,e,i){let l=t.getAttribute("list-number"),s=t.getAttribute("todo-number"),r=i[parseInt(l)].getTodos[parseInt(s)],n=e.firstElementChild.nextElementSibling;n.firstElementChild.value=r.getTitle,n.firstElementChild.nextElementSibling.lastElementChild.value=r.getDueDate;const o=r.getPriority;let u=n.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild;return function(t,e){let i=e.firstElementChild;for(;;){if(i.getAttribute("value")===t){i.selected=!0;break}i=i.nextElementSibling}}(o,u),u.parentNode.nextElementSibling.value=r.getDescription,r}(this,t,i),l=t.lastElementChild;l.onsubmit=t=>{!function(t,e,l){e.preventDefault(),l.classList.remove(t.getPriority),t.setTitle=e.target.firstElementChild.value,t.setDueDate=e.target.firstElementChild.nextElementSibling.lastElementChild.value,t.setPriority=e.target.firstElementChild.nextElementSibling.nextElementSibling.lastElementChild.value,t.setDescription=e.target.lastElementChild.previousElementSibling.value,e.target.reset(),e.target.parentNode.setAttribute("id","hide"),function(t,e){e.firstElementChild.firstElementChild.lastElementChild.innerHTML=`<p class="tName">\n                  <strong>${t.getTitle}</strong>\n                </p>\n                <p class='tDate'>${o(t.getDueDate)}</p>`,e.firstElementChild.nextElementSibling.textContent=`${t.getDescription}`,e.classList.toggle(t.getPriority)}(t,l),m(i,g)}(e,t,this)},l.onreset=()=>{t.setAttribute("id","hide")}}else{"checkbox"===t.target.getAttribute("type")&&p(t.target);const e=this.getAttribute("list-number"),l=this.getAttribute("todo-number");i[parseInt(e)].getTodos[parseInt(l)].changeCompleteStatus(),p(this.firstElementChild.firstElementChild.firstElementChild)}m(i,g)}const A=document.querySelector(".all-list"),v=document.querySelector("#list-name"),E=document.querySelector(".list-form"),C=document.querySelector(".add-new-list"),S=document.querySelector(".new-list-modal"),y=document.querySelector(".add-todo"),L=document.querySelector(".new-todo-modal"),N=document.querySelector(".todo-form"),T=document.querySelector("#todo-name"),D=document.querySelector("#due-date"),I=document.querySelector("#priority"),$=document.querySelector("#description"),q=document.querySelector(".all-todo"),x=document.querySelector(".todo-header");if(localStorage.getItem("activeListNumber")){let s=function(){let i=[],l=[];for(let s in localStorage)if(s.includes("list")&&!s.includes("todo")){const e=localStorage.getItem(s).split(","),l=e[0],r=parseInt(e[1]);if(3===e.length){const e=new t(l,[],r,1);i.push(e)}else{const e=new t(l,[],r);i.push(e)}}else if(s.includes("todo")){const t=localStorage.getItem(s).split(","),i=t[0],r=t[1],n=t[2],o=t[3],u=parseInt(t[4]),d=parseInt(t[5]),c=parseInt(t[6]),a=new e(i,r,n,o,u,d,c);l.push(a)}let s=function(t){return t.sort(((t,e)=>t.getListNumber>e.getListNumber?1:-1))}(i);return function(t,e){for(let i of e)t[i.getListNumber].getTodos.push(i);for(let e of t){const t=e.getTodos.sort(((t,e)=>t.getTodoNumber>e.getTodoNumber?1:-1));e.setTodos=t}}(s,l),s}();g=localStorage.getItem("activeListNumber"),function(t){if(0===t.length)return;for(let e of t){l(e,A,S);for(let t of e.getTodos)u(q,t)}const e=document.querySelector(`.all-list div[list-number="${g}"]`);null!==e&&e.setAttribute("id","active-list");const s=Array.from(document.querySelectorAll(".a-todo"));d(x,g,i[parseInt(g)].getTitle),c(s,g)}(s)}else{let e=new t("My Day",[],0,1);l(e,A,S),d(x,"0","My Day"),document.querySelector(`.all-list div[list-number="${e.getListNumber}"]`).setAttribute("id","active-list"),m(i,g)}const k=document.querySelectorAll(".all-list .a-list"),w=document.querySelectorAll(".all-todo .a-todo");y.onclick=()=>{L.removeAttribute("id")},C.addEventListener("click",(()=>{S.removeAttribute("id"),A.scrollTo(0,A.scrollHeight)})),E.onsubmit=function(e){e.preventDefault();let r=new t(v.value,[],i.length);s(A);const n=l(r,A,S);n.setAttribute("id","active-list");const o=Array.from(document.querySelectorAll(".a-todo"));d(x,r.getListNumber,r.getTitle),c(o,r.getListNumber.toString()),g=r.getListNumber.toString(),n.onclick=b,e.target.reset(),S.setAttribute("id","hide"),A.scrollTo(0,A.scrollHeight),m(i,g)},E.onreset=()=>{S.setAttribute("id","hide")},N.onsubmit=function(t){t.preventDefault();const l=parseInt(x.getAttribute("list-number")),s=i[parseInt(l)].getTodos.length;let r=new e(T.value,$.value,D.value,I.value,l,0,s);i[parseInt(l)].getTodos.push(r),u(q,r).onclick=f,L.setAttribute("id","hide"),q.scrollTo(0,q.scrollHeight),t.target.reset(),m(i,g)},N.onreset=()=>{L.setAttribute("id","hide")},k.forEach((t=>{t.onclick=b})),w.forEach((t=>{t.onclick=f}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,